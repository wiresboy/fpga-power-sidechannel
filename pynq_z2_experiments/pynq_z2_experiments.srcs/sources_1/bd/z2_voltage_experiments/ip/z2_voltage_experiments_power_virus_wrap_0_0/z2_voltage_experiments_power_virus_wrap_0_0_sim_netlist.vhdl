-- Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- --------------------------------------------------------------------------------
-- Tool Version: Vivado v.2020.1 (win64) Build 2902540 Wed May 27 19:54:49 MDT 2020
-- Date        : Sun Nov 15 19:58:23 2020
-- Host        : LAPTOP-LHCIPRAJ running 64-bit major release  (build 9200)
-- Command     : write_vhdl -force -mode funcsim
--               d:/Github/fpga-power-sidechannel/pynq_z2_experiments/pynq_z2_experiments.srcs/sources_1/bd/z2_voltage_experiments/ip/z2_voltage_experiments_power_virus_wrap_0_0/z2_voltage_experiments_power_virus_wrap_0_0_sim_netlist.vhdl
-- Design      : z2_voltage_experiments_power_virus_wrap_0_0
-- Purpose     : This VHDL netlist is a functional simulation representation of the design and should not be modified or
--               synthesized. This netlist cannot be used for SDF annotated simulation.
-- Device      : xc7z020clg400-1
-- --------------------------------------------------------------------------------
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO : entity is "true";
end z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO;

architecture STRUCTURE of z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__10\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__10\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__10\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__10\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__10\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__100\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__100\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__100\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__100\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__100\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1000\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1000\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1000\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1000\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1000\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1001\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1001\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1001\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1001\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1001\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1002\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1002\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1002\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1002\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1002\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1003\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1003\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1003\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1003\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1003\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1004\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1004\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1004\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1004\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1004\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1005\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1005\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1005\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1005\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1005\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1006\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1006\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1006\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1006\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1006\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1007\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1007\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1007\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1007\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1007\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1008\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1008\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1008\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1008\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1008\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1009\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1009\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1009\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1009\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1009\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__101\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__101\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__101\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__101\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__101\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1010\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1010\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1010\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1010\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1010\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1011\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1011\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1011\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1011\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1011\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1012\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1012\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1012\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1012\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1012\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1013\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1013\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1013\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1013\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1013\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1014\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1014\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1014\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1014\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1014\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1015\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1015\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1015\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1015\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1015\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1016\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1016\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1016\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1016\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1016\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1017\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1017\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1017\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1017\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1017\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1018\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1018\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1018\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1018\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1018\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1019\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1019\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1019\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1019\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1019\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__102\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__102\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__102\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__102\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__102\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1020\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1020\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1020\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1020\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1020\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1021\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1021\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1021\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1021\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1021\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1022\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1022\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1022\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1022\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1022\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1023\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1023\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1023\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1023\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1023\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1024\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1024\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1024\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1024\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1024\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1025\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1025\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1025\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1025\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1025\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1026\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1026\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1026\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1026\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1026\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1027\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1027\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1027\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1027\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1027\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1028\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1028\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1028\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1028\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1028\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1029\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1029\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1029\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1029\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1029\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__103\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__103\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__103\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__103\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__103\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1030\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1030\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1030\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1030\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1030\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1031\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1031\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1031\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1031\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1031\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1032\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1032\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1032\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1032\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1032\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1033\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1033\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1033\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1033\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1033\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1034\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1034\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1034\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1034\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1034\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1035\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1035\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1035\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1035\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1035\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1036\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1036\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1036\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1036\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1036\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1037\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1037\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1037\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1037\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1037\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1038\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1038\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1038\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1038\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1038\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1039\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1039\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1039\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1039\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1039\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__104\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__104\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__104\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__104\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__104\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1040\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1040\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1040\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1040\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1040\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1041\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1041\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1041\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1041\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1041\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1042\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1042\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1042\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1042\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1042\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1043\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1043\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1043\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1043\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1043\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1044\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1044\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1044\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1044\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1044\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1045\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1045\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1045\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1045\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1045\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1046\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1046\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1046\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1046\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1046\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1047\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1047\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1047\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1047\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1047\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1048\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1048\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1048\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1048\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1048\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1049\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1049\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1049\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1049\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1049\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__105\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__105\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__105\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__105\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__105\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1050\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1050\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1050\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1050\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1050\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1051\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1051\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1051\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1051\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1051\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1052\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1052\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1052\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1052\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1052\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1053\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1053\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1053\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1053\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1053\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1054\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1054\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1054\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1054\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1054\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1055\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1055\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1055\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1055\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1055\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1056\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1056\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1056\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1056\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1056\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1057\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1057\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1057\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1057\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1057\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1058\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1058\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1058\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1058\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1058\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1059\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1059\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1059\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1059\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1059\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__106\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__106\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__106\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__106\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__106\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1060\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1060\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1060\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1060\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1060\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1061\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1061\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1061\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1061\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1061\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1062\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1062\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1062\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1062\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1062\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1063\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1063\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1063\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1063\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1063\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1064\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1064\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1064\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1064\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1064\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1065\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1065\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1065\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1065\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1065\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1066\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1066\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1066\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1066\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1066\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1067\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1067\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1067\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1067\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1067\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1068\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1068\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1068\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1068\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1068\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1069\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1069\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1069\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1069\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1069\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__107\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__107\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__107\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__107\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__107\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1070\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1070\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1070\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1070\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1070\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1071\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1071\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1071\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1071\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1071\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1072\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1072\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1072\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1072\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1072\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1073\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1073\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1073\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1073\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1073\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1074\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1074\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1074\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1074\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1074\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1075\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1075\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1075\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1075\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1075\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1076\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1076\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1076\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1076\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1076\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1077\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1077\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1077\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1077\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1077\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1078\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1078\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1078\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1078\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1078\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1079\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1079\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1079\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1079\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1079\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__108\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__108\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__108\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__108\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__108\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1080\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1080\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1080\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1080\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1080\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1081\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1081\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1081\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1081\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1081\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1082\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1082\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1082\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1082\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1082\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1083\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1083\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1083\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1083\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1083\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1084\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1084\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1084\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1084\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1084\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1085\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1085\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1085\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1085\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1085\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1086\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1086\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1086\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1086\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1086\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1087\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1087\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1087\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1087\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1087\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1088\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1088\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1088\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1088\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1088\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1089\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1089\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1089\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1089\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1089\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__109\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__109\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__109\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__109\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__109\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1090\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1090\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1090\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1090\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1090\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1091\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1091\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1091\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1091\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1091\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1092\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1092\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1092\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1092\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1092\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1093\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1093\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1093\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1093\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1093\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1094\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1094\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1094\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1094\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1094\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1095\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1095\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1095\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1095\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1095\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1096\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1096\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1096\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1096\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1096\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1097\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1097\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1097\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1097\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1097\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1098\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1098\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1098\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1098\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1098\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1099\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1099\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1099\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1099\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1099\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__11\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__11\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__11\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__11\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__11\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__110\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__110\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__110\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__110\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__110\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1100\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1100\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1100\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1100\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1100\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1101\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1101\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1101\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1101\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1101\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1102\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1102\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1102\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1102\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1102\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1103\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1103\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1103\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1103\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1103\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1104\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1104\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1104\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1104\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1104\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1105\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1105\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1105\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1105\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1105\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1106\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1106\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1106\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1106\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1106\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1107\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1107\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1107\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1107\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1107\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1108\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1108\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1108\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1108\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1108\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1109\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1109\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1109\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1109\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1109\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__111\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__111\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__111\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__111\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__111\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1110\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1110\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1110\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1110\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1110\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1111\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1111\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1111\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1111\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1111\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1112\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1112\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1112\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1112\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1112\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1113\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1113\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1113\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1113\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1113\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1114\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1114\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1114\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1114\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1114\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1115\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1115\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1115\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1115\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1115\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1116\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1116\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1116\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1116\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1116\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1117\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1117\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1117\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1117\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1117\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1118\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1118\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1118\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1118\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1118\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1119\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1119\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1119\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1119\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1119\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__112\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__112\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__112\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__112\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__112\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1120\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1120\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1120\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1120\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1120\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1121\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1121\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1121\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1121\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1121\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1122\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1122\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1122\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1122\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1122\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1123\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1123\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1123\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1123\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1123\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1124\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1124\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1124\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1124\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1124\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1125\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1125\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1125\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1125\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1125\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1126\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1126\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1126\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1126\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1126\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1127\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1127\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1127\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1127\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1127\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1128\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1128\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1128\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1128\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1128\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1129\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1129\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1129\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1129\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1129\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__113\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__113\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__113\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__113\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__113\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1130\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1130\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1130\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1130\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1130\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1131\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1131\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1131\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1131\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1131\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1132\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1132\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1132\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1132\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1132\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1133\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1133\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1133\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1133\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1133\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1134\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1134\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1134\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1134\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1134\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1135\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1135\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1135\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1135\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1135\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1136\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1136\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1136\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1136\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1136\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1137\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1137\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1137\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1137\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1137\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1138\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1138\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1138\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1138\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1138\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1139\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1139\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1139\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1139\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1139\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__114\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__114\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__114\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__114\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__114\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1140\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1140\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1140\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1140\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1140\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1141\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1141\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1141\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1141\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1141\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1142\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1142\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1142\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1142\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1142\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1143\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1143\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1143\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1143\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1143\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1144\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1144\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1144\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1144\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1144\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1145\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1145\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1145\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1145\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1145\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1146\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1146\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1146\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1146\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1146\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1147\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1147\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1147\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1147\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1147\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1148\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1148\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1148\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1148\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1148\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1149\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1149\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1149\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1149\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1149\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__115\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__115\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__115\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__115\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__115\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1150\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1150\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1150\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1150\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1150\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1151\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1151\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1151\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1151\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1151\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1152\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1152\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1152\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1152\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1152\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1153\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1153\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1153\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1153\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1153\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1154\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1154\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1154\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1154\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1154\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1155\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1155\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1155\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1155\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1155\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1156\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1156\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1156\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1156\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1156\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1157\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1157\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1157\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1157\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1157\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1158\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1158\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1158\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1158\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1158\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1159\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1159\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1159\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1159\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1159\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__116\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__116\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__116\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__116\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__116\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1160\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1160\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1160\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1160\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1160\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1161\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1161\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1161\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1161\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1161\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1162\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1162\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1162\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1162\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1162\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1163\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1163\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1163\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1163\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1163\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1164\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1164\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1164\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1164\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1164\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1165\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1165\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1165\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1165\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1165\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1166\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1166\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1166\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1166\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1166\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1167\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1167\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1167\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1167\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1167\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1168\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1168\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1168\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1168\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1168\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1169\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1169\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1169\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1169\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1169\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__117\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__117\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__117\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__117\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__117\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1170\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1170\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1170\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1170\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1170\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1171\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1171\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1171\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1171\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1171\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1172\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1172\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1172\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1172\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1172\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1173\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1173\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1173\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1173\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1173\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1174\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1174\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1174\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1174\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1174\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1175\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1175\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1175\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1175\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1175\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1176\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1176\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1176\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1176\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1176\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1177\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1177\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1177\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1177\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1177\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1178\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1178\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1178\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1178\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1178\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1179\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1179\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1179\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1179\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1179\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__118\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__118\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__118\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__118\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__118\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1180\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1180\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1180\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1180\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1180\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1181\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1181\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1181\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1181\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1181\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1182\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1182\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1182\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1182\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1182\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1183\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1183\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1183\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1183\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1183\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1184\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1184\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1184\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1184\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1184\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1185\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1185\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1185\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1185\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1185\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1186\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1186\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1186\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1186\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1186\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1187\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1187\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1187\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1187\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1187\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1188\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1188\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1188\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1188\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1188\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1189\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1189\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1189\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1189\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1189\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__119\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__119\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__119\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__119\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__119\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1190\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1190\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1190\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1190\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1190\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1191\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1191\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1191\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1191\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1191\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1192\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1192\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1192\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1192\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1192\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1193\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1193\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1193\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1193\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1193\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1194\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1194\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1194\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1194\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1194\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1195\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1195\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1195\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1195\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1195\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1196\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1196\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1196\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1196\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1196\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1197\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1197\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1197\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1197\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1197\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1198\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1198\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1198\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1198\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1198\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1199\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1199\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1199\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1199\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1199\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__12\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__12\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__12\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__12\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__12\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__120\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__120\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__120\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__120\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__120\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1200\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1200\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1200\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1200\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1200\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1201\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1201\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1201\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1201\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1201\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1202\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1202\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1202\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1202\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1202\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1203\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1203\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1203\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1203\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1203\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1204\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1204\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1204\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1204\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1204\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1205\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1205\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1205\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1205\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1205\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1206\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1206\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1206\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1206\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1206\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1207\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1207\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1207\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1207\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1207\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1208\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1208\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1208\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1208\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1208\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1209\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1209\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1209\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1209\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1209\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__121\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__121\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__121\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__121\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__121\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1210\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1210\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1210\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1210\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1210\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1211\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1211\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1211\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1211\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1211\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1212\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1212\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1212\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1212\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1212\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1213\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1213\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1213\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1213\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1213\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1214\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1214\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1214\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1214\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1214\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1215\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1215\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1215\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1215\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1215\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1216\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1216\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1216\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1216\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1216\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1217\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1217\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1217\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1217\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1217\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1218\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1218\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1218\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1218\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1218\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1219\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1219\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1219\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1219\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1219\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__122\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__122\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__122\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__122\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__122\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1220\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1220\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1220\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1220\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1220\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1221\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1221\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1221\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1221\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1221\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1222\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1222\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1222\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1222\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1222\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1223\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1223\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1223\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1223\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1223\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1224\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1224\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1224\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1224\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1224\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1225\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1225\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1225\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1225\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1225\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1226\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1226\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1226\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1226\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1226\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1227\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1227\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1227\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1227\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1227\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1228\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1228\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1228\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1228\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1228\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1229\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1229\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1229\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1229\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1229\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__123\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__123\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__123\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__123\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__123\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1230\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1230\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1230\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1230\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1230\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1231\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1231\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1231\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1231\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1231\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1232\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1232\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1232\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1232\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1232\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1233\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1233\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1233\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1233\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1233\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1234\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1234\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1234\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1234\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1234\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1235\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1235\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1235\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1235\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1235\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1236\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1236\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1236\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1236\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1236\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1237\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1237\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1237\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1237\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1237\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1238\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1238\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1238\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1238\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1238\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1239\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1239\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1239\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1239\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1239\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__124\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__124\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__124\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__124\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__124\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__125\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__125\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__125\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__125\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__125\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__126\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__126\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__126\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__126\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__126\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__127\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__127\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__127\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__127\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__127\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__128\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__128\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__128\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__128\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__128\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__129\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__129\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__129\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__129\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__129\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__13\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__13\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__13\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__13\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__13\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__130\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__130\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__130\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__130\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__130\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__131\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__131\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__131\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__131\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__131\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__132\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__132\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__132\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__132\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__132\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__133\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__133\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__133\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__133\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__133\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__134\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__134\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__134\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__134\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__134\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__135\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__135\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__135\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__135\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__135\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__136\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__136\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__136\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__136\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__136\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__137\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__137\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__137\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__137\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__137\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__138\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__138\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__138\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__138\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__138\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__139\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__139\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__139\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__139\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__139\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__14\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__14\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__14\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__14\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__14\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__140\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__140\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__140\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__140\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__140\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__141\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__141\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__141\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__141\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__141\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__142\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__142\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__142\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__142\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__142\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__143\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__143\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__143\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__143\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__143\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__144\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__144\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__144\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__144\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__144\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__145\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__145\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__145\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__145\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__145\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__146\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__146\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__146\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__146\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__146\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__147\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__147\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__147\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__147\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__147\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__148\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__148\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__148\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__148\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__148\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__149\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__149\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__149\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__149\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__149\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__15\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__15\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__15\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__15\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__15\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__150\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__150\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__150\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__150\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__150\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__151\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__151\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__151\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__151\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__151\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__152\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__152\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__152\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__152\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__152\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__153\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__153\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__153\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__153\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__153\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__154\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__154\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__154\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__154\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__154\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__155\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__155\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__155\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__155\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__155\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__156\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__156\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__156\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__156\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__156\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__157\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__157\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__157\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__157\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__157\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__158\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__158\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__158\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__158\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__158\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__159\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__159\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__159\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__159\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__159\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__16\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__16\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__16\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__16\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__16\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__160\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__160\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__160\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__160\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__160\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__161\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__161\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__161\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__161\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__161\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__162\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__162\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__162\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__162\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__162\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__163\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__163\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__163\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__163\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__163\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__164\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__164\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__164\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__164\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__164\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__165\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__165\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__165\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__165\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__165\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__166\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__166\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__166\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__166\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__166\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__167\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__167\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__167\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__167\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__167\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__168\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__168\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__168\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__168\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__168\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__169\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__169\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__169\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__169\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__169\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__17\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__17\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__17\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__17\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__17\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__170\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__170\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__170\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__170\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__170\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__171\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__171\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__171\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__171\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__171\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__172\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__172\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__172\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__172\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__172\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__173\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__173\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__173\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__173\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__173\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__174\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__174\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__174\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__174\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__174\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__175\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__175\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__175\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__175\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__175\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__176\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__176\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__176\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__176\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__176\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__177\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__177\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__177\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__177\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__177\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__178\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__178\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__178\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__178\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__178\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__179\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__179\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__179\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__179\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__179\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__18\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__18\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__18\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__18\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__18\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__180\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__180\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__180\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__180\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__180\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__181\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__181\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__181\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__181\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__181\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__182\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__182\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__182\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__182\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__182\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__183\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__183\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__183\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__183\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__183\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__184\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__184\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__184\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__184\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__184\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__185\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__185\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__185\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__185\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__185\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__186\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__186\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__186\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__186\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__186\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__187\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__187\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__187\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__187\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__187\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__188\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__188\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__188\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__188\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__188\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__189\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__189\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__189\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__189\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__189\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__19\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__19\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__19\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__19\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__19\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__190\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__190\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__190\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__190\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__190\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__191\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__191\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__191\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__191\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__191\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__192\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__192\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__192\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__192\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__192\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__193\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__193\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__193\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__193\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__193\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__194\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__194\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__194\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__194\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__194\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__195\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__195\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__195\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__195\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__195\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__196\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__196\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__196\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__196\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__196\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__197\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__197\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__197\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__197\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__197\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__198\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__198\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__198\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__198\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__198\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__199\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__199\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__199\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__199\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__199\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__2\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__2\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__2\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__2\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__2\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__20\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__20\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__20\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__20\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__20\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__200\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__200\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__200\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__200\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__200\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__201\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__201\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__201\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__201\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__201\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__202\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__202\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__202\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__202\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__202\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__203\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__203\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__203\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__203\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__203\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__204\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__204\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__204\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__204\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__204\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__205\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__205\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__205\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__205\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__205\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__206\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__206\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__206\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__206\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__206\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__207\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__207\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__207\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__207\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__207\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__208\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__208\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__208\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__208\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__208\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__209\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__209\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__209\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__209\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__209\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__21\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__21\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__21\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__21\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__21\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__210\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__210\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__210\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__210\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__210\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__211\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__211\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__211\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__211\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__211\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__212\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__212\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__212\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__212\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__212\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__213\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__213\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__213\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__213\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__213\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__214\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__214\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__214\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__214\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__214\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__215\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__215\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__215\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__215\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__215\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__216\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__216\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__216\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__216\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__216\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__217\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__217\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__217\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__217\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__217\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__218\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__218\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__218\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__218\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__218\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__219\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__219\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__219\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__219\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__219\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__22\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__22\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__22\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__22\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__22\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__220\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__220\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__220\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__220\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__220\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__221\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__221\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__221\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__221\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__221\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__222\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__222\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__222\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__222\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__222\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__223\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__223\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__223\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__223\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__223\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__224\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__224\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__224\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__224\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__224\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__225\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__225\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__225\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__225\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__225\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__226\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__226\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__226\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__226\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__226\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__227\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__227\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__227\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__227\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__227\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__228\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__228\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__228\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__228\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__228\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__229\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__229\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__229\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__229\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__229\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__23\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__23\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__23\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__23\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__23\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__230\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__230\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__230\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__230\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__230\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__231\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__231\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__231\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__231\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__231\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__232\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__232\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__232\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__232\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__232\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__233\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__233\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__233\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__233\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__233\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__234\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__234\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__234\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__234\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__234\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__235\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__235\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__235\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__235\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__235\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__236\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__236\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__236\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__236\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__236\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__237\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__237\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__237\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__237\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__237\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__238\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__238\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__238\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__238\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__238\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__239\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__239\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__239\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__239\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__239\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__24\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__24\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__24\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__24\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__24\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__240\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__240\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__240\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__240\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__240\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__241\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__241\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__241\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__241\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__241\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__242\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__242\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__242\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__242\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__242\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__243\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__243\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__243\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__243\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__243\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__244\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__244\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__244\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__244\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__244\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__245\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__245\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__245\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__245\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__245\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__246\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__246\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__246\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__246\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__246\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__247\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__247\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__247\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__247\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__247\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__248\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__248\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__248\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__248\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__248\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__249\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__249\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__249\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__249\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__249\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__25\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__25\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__25\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__25\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__25\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__250\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__250\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__250\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__250\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__250\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__251\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__251\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__251\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__251\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__251\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__252\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__252\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__252\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__252\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__252\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__253\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__253\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__253\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__253\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__253\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__254\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__254\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__254\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__254\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__254\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__255\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__255\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__255\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__255\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__255\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__256\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__256\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__256\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__256\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__256\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__257\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__257\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__257\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__257\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__257\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__258\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__258\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__258\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__258\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__258\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__259\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__259\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__259\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__259\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__259\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__26\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__26\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__26\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__26\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__26\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__260\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__260\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__260\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__260\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__260\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__261\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__261\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__261\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__261\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__261\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__262\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__262\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__262\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__262\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__262\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__263\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__263\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__263\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__263\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__263\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__264\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__264\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__264\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__264\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__264\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__265\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__265\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__265\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__265\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__265\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__266\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__266\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__266\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__266\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__266\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__267\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__267\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__267\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__267\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__267\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__268\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__268\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__268\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__268\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__268\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__269\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__269\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__269\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__269\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__269\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__27\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__27\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__27\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__27\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__27\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__270\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__270\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__270\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__270\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__270\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__271\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__271\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__271\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__271\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__271\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__272\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__272\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__272\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__272\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__272\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__273\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__273\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__273\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__273\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__273\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__274\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__274\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__274\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__274\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__274\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__275\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__275\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__275\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__275\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__275\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__276\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__276\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__276\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__276\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__276\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__277\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__277\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__277\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__277\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__277\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__278\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__278\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__278\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__278\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__278\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__279\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__279\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__279\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__279\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__279\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__28\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__28\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__28\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__28\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__28\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__280\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__280\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__280\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__280\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__280\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__281\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__281\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__281\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__281\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__281\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__282\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__282\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__282\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__282\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__282\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__283\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__283\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__283\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__283\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__283\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__284\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__284\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__284\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__284\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__284\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__285\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__285\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__285\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__285\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__285\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__286\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__286\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__286\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__286\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__286\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__287\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__287\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__287\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__287\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__287\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__288\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__288\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__288\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__288\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__288\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__289\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__289\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__289\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__289\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__289\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__29\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__29\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__29\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__29\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__29\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__290\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__290\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__290\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__290\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__290\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__291\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__291\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__291\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__291\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__291\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__292\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__292\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__292\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__292\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__292\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__293\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__293\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__293\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__293\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__293\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__294\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__294\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__294\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__294\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__294\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__295\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__295\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__295\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__295\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__295\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__296\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__296\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__296\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__296\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__296\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__297\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__297\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__297\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__297\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__297\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__298\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__298\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__298\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__298\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__298\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__299\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__299\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__299\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__299\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__299\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__3\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__3\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__3\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__3\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__3\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__30\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__30\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__30\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__30\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__30\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__300\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__300\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__300\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__300\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__300\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__301\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__301\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__301\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__301\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__301\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__302\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__302\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__302\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__302\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__302\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__303\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__303\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__303\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__303\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__303\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__304\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__304\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__304\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__304\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__304\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__305\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__305\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__305\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__305\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__305\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__306\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__306\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__306\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__306\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__306\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__307\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__307\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__307\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__307\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__307\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__308\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__308\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__308\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__308\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__308\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__309\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__309\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__309\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__309\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__309\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__31\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__31\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__31\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__31\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__31\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__310\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__310\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__310\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__310\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__310\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__311\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__311\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__311\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__311\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__311\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__312\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__312\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__312\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__312\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__312\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__313\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__313\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__313\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__313\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__313\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__314\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__314\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__314\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__314\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__314\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__315\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__315\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__315\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__315\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__315\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__316\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__316\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__316\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__316\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__316\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__317\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__317\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__317\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__317\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__317\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__318\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__318\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__318\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__318\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__318\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__319\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__319\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__319\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__319\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__319\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__32\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__32\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__32\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__32\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__32\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__320\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__320\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__320\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__320\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__320\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__321\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__321\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__321\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__321\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__321\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__322\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__322\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__322\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__322\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__322\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__323\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__323\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__323\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__323\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__323\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__324\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__324\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__324\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__324\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__324\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__325\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__325\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__325\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__325\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__325\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__326\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__326\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__326\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__326\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__326\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__327\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__327\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__327\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__327\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__327\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__328\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__328\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__328\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__328\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__328\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__329\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__329\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__329\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__329\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__329\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__33\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__33\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__33\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__33\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__33\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__330\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__330\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__330\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__330\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__330\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__331\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__331\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__331\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__331\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__331\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__332\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__332\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__332\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__332\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__332\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__333\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__333\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__333\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__333\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__333\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__334\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__334\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__334\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__334\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__334\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__335\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__335\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__335\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__335\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__335\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__336\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__336\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__336\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__336\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__336\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__337\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__337\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__337\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__337\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__337\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__338\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__338\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__338\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__338\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__338\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__339\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__339\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__339\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__339\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__339\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__34\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__34\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__34\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__34\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__34\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__340\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__340\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__340\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__340\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__340\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__341\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__341\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__341\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__341\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__341\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__342\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__342\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__342\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__342\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__342\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__343\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__343\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__343\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__343\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__343\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__344\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__344\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__344\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__344\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__344\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__345\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__345\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__345\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__345\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__345\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__346\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__346\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__346\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__346\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__346\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__347\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__347\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__347\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__347\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__347\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__348\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__348\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__348\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__348\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__348\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__349\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__349\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__349\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__349\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__349\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__35\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__35\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__35\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__35\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__35\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__350\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__350\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__350\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__350\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__350\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__351\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__351\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__351\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__351\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__351\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__352\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__352\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__352\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__352\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__352\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__353\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__353\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__353\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__353\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__353\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__354\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__354\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__354\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__354\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__354\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__355\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__355\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__355\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__355\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__355\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__356\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__356\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__356\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__356\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__356\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__357\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__357\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__357\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__357\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__357\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__358\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__358\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__358\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__358\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__358\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__359\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__359\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__359\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__359\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__359\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__36\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__36\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__36\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__36\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__36\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__360\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__360\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__360\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__360\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__360\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__361\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__361\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__361\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__361\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__361\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__362\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__362\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__362\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__362\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__362\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__363\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__363\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__363\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__363\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__363\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__364\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__364\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__364\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__364\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__364\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__365\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__365\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__365\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__365\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__365\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__366\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__366\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__366\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__366\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__366\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__367\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__367\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__367\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__367\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__367\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__368\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__368\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__368\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__368\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__368\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__369\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__369\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__369\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__369\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__369\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__37\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__37\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__37\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__37\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__37\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__370\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__370\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__370\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__370\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__370\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__371\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__371\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__371\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__371\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__371\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__372\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__372\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__372\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__372\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__372\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__373\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__373\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__373\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__373\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__373\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__374\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__374\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__374\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__374\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__374\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__375\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__375\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__375\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__375\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__375\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__376\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__376\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__376\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__376\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__376\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__377\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__377\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__377\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__377\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__377\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__378\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__378\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__378\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__378\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__378\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__379\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__379\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__379\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__379\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__379\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__38\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__38\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__38\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__38\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__38\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__380\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__380\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__380\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__380\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__380\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__381\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__381\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__381\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__381\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__381\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__382\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__382\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__382\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__382\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__382\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__383\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__383\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__383\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__383\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__383\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__384\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__384\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__384\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__384\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__384\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__385\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__385\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__385\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__385\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__385\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__386\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__386\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__386\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__386\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__386\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__387\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__387\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__387\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__387\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__387\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__388\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__388\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__388\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__388\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__388\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__389\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__389\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__389\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__389\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__389\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__39\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__39\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__39\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__39\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__39\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__390\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__390\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__390\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__390\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__390\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__391\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__391\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__391\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__391\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__391\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__392\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__392\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__392\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__392\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__392\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__393\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__393\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__393\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__393\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__393\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__394\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__394\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__394\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__394\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__394\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__395\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__395\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__395\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__395\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__395\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__396\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__396\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__396\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__396\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__396\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__397\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__397\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__397\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__397\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__397\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__398\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__398\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__398\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__398\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__398\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__399\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__399\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__399\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__399\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__399\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__4\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__4\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__4\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__4\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__4\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__40\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__40\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__40\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__40\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__40\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__400\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__400\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__400\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__400\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__400\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__401\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__401\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__401\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__401\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__401\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__402\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__402\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__402\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__402\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__402\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__403\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__403\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__403\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__403\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__403\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__404\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__404\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__404\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__404\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__404\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__405\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__405\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__405\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__405\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__405\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__406\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__406\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__406\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__406\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__406\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__407\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__407\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__407\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__407\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__407\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__408\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__408\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__408\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__408\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__408\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__409\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__409\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__409\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__409\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__409\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__41\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__41\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__41\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__41\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__41\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__410\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__410\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__410\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__410\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__410\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__411\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__411\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__411\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__411\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__411\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__412\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__412\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__412\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__412\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__412\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__413\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__413\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__413\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__413\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__413\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__414\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__414\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__414\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__414\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__414\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__415\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__415\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__415\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__415\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__415\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__416\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__416\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__416\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__416\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__416\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__417\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__417\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__417\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__417\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__417\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__418\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__418\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__418\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__418\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__418\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__419\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__419\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__419\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__419\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__419\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__42\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__42\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__42\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__42\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__42\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__420\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__420\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__420\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__420\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__420\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__421\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__421\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__421\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__421\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__421\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__422\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__422\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__422\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__422\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__422\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__423\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__423\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__423\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__423\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__423\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__424\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__424\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__424\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__424\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__424\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__425\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__425\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__425\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__425\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__425\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__426\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__426\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__426\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__426\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__426\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__427\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__427\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__427\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__427\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__427\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__428\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__428\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__428\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__428\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__428\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__429\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__429\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__429\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__429\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__429\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__43\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__43\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__43\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__43\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__43\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__430\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__430\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__430\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__430\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__430\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__431\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__431\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__431\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__431\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__431\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__432\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__432\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__432\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__432\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__432\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__433\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__433\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__433\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__433\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__433\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__434\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__434\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__434\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__434\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__434\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__435\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__435\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__435\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__435\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__435\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__436\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__436\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__436\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__436\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__436\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__437\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__437\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__437\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__437\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__437\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__438\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__438\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__438\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__438\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__438\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__439\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__439\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__439\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__439\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__439\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__44\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__44\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__44\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__44\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__44\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__440\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__440\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__440\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__440\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__440\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__441\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__441\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__441\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__441\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__441\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__442\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__442\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__442\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__442\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__442\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__443\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__443\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__443\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__443\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__443\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__444\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__444\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__444\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__444\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__444\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__445\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__445\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__445\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__445\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__445\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__446\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__446\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__446\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__446\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__446\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__447\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__447\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__447\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__447\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__447\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__448\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__448\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__448\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__448\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__448\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__449\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__449\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__449\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__449\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__449\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__45\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__45\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__45\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__45\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__45\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__450\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__450\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__450\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__450\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__450\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__451\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__451\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__451\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__451\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__451\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__452\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__452\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__452\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__452\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__452\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__453\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__453\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__453\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__453\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__453\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__454\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__454\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__454\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__454\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__454\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__455\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__455\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__455\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__455\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__455\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__456\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__456\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__456\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__456\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__456\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__457\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__457\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__457\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__457\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__457\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__458\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__458\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__458\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__458\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__458\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__459\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__459\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__459\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__459\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__459\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__46\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__46\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__46\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__46\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__46\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__460\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__460\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__460\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__460\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__460\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__461\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__461\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__461\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__461\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__461\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__462\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__462\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__462\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__462\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__462\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__463\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__463\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__463\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__463\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__463\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__464\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__464\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__464\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__464\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__464\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__465\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__465\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__465\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__465\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__465\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__466\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__466\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__466\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__466\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__466\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__467\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__467\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__467\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__467\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__467\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__468\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__468\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__468\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__468\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__468\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__469\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__469\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__469\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__469\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__469\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__47\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__47\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__47\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__47\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__47\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__470\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__470\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__470\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__470\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__470\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__471\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__471\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__471\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__471\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__471\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__472\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__472\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__472\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__472\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__472\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__473\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__473\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__473\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__473\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__473\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__474\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__474\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__474\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__474\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__474\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__475\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__475\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__475\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__475\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__475\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__476\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__476\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__476\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__476\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__476\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__477\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__477\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__477\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__477\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__477\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__478\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__478\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__478\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__478\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__478\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__479\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__479\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__479\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__479\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__479\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__48\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__48\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__48\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__48\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__48\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__480\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__480\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__480\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__480\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__480\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__481\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__481\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__481\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__481\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__481\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__482\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__482\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__482\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__482\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__482\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__483\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__483\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__483\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__483\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__483\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__484\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__484\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__484\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__484\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__484\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__485\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__485\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__485\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__485\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__485\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__486\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__486\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__486\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__486\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__486\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__487\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__487\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__487\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__487\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__487\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__488\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__488\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__488\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__488\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__488\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__489\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__489\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__489\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__489\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__489\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__49\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__49\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__49\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__49\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__49\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__490\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__490\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__490\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__490\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__490\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__491\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__491\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__491\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__491\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__491\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__492\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__492\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__492\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__492\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__492\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__493\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__493\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__493\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__493\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__493\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__494\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__494\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__494\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__494\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__494\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__495\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__495\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__495\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__495\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__495\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__496\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__496\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__496\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__496\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__496\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__497\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__497\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__497\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__497\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__497\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__498\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__498\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__498\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__498\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__498\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__499\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__499\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__499\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__499\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__499\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__5\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__5\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__5\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__5\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__5\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__50\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__50\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__50\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__50\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__50\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__500\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__500\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__500\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__500\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__500\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__501\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__501\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__501\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__501\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__501\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__502\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__502\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__502\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__502\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__502\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__503\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__503\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__503\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__503\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__503\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__504\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__504\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__504\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__504\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__504\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__505\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__505\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__505\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__505\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__505\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__506\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__506\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__506\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__506\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__506\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__507\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__507\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__507\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__507\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__507\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__508\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__508\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__508\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__508\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__508\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__509\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__509\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__509\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__509\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__509\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__51\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__51\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__51\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__51\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__51\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__510\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__510\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__510\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__510\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__510\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__511\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__511\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__511\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__511\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__511\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__512\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__512\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__512\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__512\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__512\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__513\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__513\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__513\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__513\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__513\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__514\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__514\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__514\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__514\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__514\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__515\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__515\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__515\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__515\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__515\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__516\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__516\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__516\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__516\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__516\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__517\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__517\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__517\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__517\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__517\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__518\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__518\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__518\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__518\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__518\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__519\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__519\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__519\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__519\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__519\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__52\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__52\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__52\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__52\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__52\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__520\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__520\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__520\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__520\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__520\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__521\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__521\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__521\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__521\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__521\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__522\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__522\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__522\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__522\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__522\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__523\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__523\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__523\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__523\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__523\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__524\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__524\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__524\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__524\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__524\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__525\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__525\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__525\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__525\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__525\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__526\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__526\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__526\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__526\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__526\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__527\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__527\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__527\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__527\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__527\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__528\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__528\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__528\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__528\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__528\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__529\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__529\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__529\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__529\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__529\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__53\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__53\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__53\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__53\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__53\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__530\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__530\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__530\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__530\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__530\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__531\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__531\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__531\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__531\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__531\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__532\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__532\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__532\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__532\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__532\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__533\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__533\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__533\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__533\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__533\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__534\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__534\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__534\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__534\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__534\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__535\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__535\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__535\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__535\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__535\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__536\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__536\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__536\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__536\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__536\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__537\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__537\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__537\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__537\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__537\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__538\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__538\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__538\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__538\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__538\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__539\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__539\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__539\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__539\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__539\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__54\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__54\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__54\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__54\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__54\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__540\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__540\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__540\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__540\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__540\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__541\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__541\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__541\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__541\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__541\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__542\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__542\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__542\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__542\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__542\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__543\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__543\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__543\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__543\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__543\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__544\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__544\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__544\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__544\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__544\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__545\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__545\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__545\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__545\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__545\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__546\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__546\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__546\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__546\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__546\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__547\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__547\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__547\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__547\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__547\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__548\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__548\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__548\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__548\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__548\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__549\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__549\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__549\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__549\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__549\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__55\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__55\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__55\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__55\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__55\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__550\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__550\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__550\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__550\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__550\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__551\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__551\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__551\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__551\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__551\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__552\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__552\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__552\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__552\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__552\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__553\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__553\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__553\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__553\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__553\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__554\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__554\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__554\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__554\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__554\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__555\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__555\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__555\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__555\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__555\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__556\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__556\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__556\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__556\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__556\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__557\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__557\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__557\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__557\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__557\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__558\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__558\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__558\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__558\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__558\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__559\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__559\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__559\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__559\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__559\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__56\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__56\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__56\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__56\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__56\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__560\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__560\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__560\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__560\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__560\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__561\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__561\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__561\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__561\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__561\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__562\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__562\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__562\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__562\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__562\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__563\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__563\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__563\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__563\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__563\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__564\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__564\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__564\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__564\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__564\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__565\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__565\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__565\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__565\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__565\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__566\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__566\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__566\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__566\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__566\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__567\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__567\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__567\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__567\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__567\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__568\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__568\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__568\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__568\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__568\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__569\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__569\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__569\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__569\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__569\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__57\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__57\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__57\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__57\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__57\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__570\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__570\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__570\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__570\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__570\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__571\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__571\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__571\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__571\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__571\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__572\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__572\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__572\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__572\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__572\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__573\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__573\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__573\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__573\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__573\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__574\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__574\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__574\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__574\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__574\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__575\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__575\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__575\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__575\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__575\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__576\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__576\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__576\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__576\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__576\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__577\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__577\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__577\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__577\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__577\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__578\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__578\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__578\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__578\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__578\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__579\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__579\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__579\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__579\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__579\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__58\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__58\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__58\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__58\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__58\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__580\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__580\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__580\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__580\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__580\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__581\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__581\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__581\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__581\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__581\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__582\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__582\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__582\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__582\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__582\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__583\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__583\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__583\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__583\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__583\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__584\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__584\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__584\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__584\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__584\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__585\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__585\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__585\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__585\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__585\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__586\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__586\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__586\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__586\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__586\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__587\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__587\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__587\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__587\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__587\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__588\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__588\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__588\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__588\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__588\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__589\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__589\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__589\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__589\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__589\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__59\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__59\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__59\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__59\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__59\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__590\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__590\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__590\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__590\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__590\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__591\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__591\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__591\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__591\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__591\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__592\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__592\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__592\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__592\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__592\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__593\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__593\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__593\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__593\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__593\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__594\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__594\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__594\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__594\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__594\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__595\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__595\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__595\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__595\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__595\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__596\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__596\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__596\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__596\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__596\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__597\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__597\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__597\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__597\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__597\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__598\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__598\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__598\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__598\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__598\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__599\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__599\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__599\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__599\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__599\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__6\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__6\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__6\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__6\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__6\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__60\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__60\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__60\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__60\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__60\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__600\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__600\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__600\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__600\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__600\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__601\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__601\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__601\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__601\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__601\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__602\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__602\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__602\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__602\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__602\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__603\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__603\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__603\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__603\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__603\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__604\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__604\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__604\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__604\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__604\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__605\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__605\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__605\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__605\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__605\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__606\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__606\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__606\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__606\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__606\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__607\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__607\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__607\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__607\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__607\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__608\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__608\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__608\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__608\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__608\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__609\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__609\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__609\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__609\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__609\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__61\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__61\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__61\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__61\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__61\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__610\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__610\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__610\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__610\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__610\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__611\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__611\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__611\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__611\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__611\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__612\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__612\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__612\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__612\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__612\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__613\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__613\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__613\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__613\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__613\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__614\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__614\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__614\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__614\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__614\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__615\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__615\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__615\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__615\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__615\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__616\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__616\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__616\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__616\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__616\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__617\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__617\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__617\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__617\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__617\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__618\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__618\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__618\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__618\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__618\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__619\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__619\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__619\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__619\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__619\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__62\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__62\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__62\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__62\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__62\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__620\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__620\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__620\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__620\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__620\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__621\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__621\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__621\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__621\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__621\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__622\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__622\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__622\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__622\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__622\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__623\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__623\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__623\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__623\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__623\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__624\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__624\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__624\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__624\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__624\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__625\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__625\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__625\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__625\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__625\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__626\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__626\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__626\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__626\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__626\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__627\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__627\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__627\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__627\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__627\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__628\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__628\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__628\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__628\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__628\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__629\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__629\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__629\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__629\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__629\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__63\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__63\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__63\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__63\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__63\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__630\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__630\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__630\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__630\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__630\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__631\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__631\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__631\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__631\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__631\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__632\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__632\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__632\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__632\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__632\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__633\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__633\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__633\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__633\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__633\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__634\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__634\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__634\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__634\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__634\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__635\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__635\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__635\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__635\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__635\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__636\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__636\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__636\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__636\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__636\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__637\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__637\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__637\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__637\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__637\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__638\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__638\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__638\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__638\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__638\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__639\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__639\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__639\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__639\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__639\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__64\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__64\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__64\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__64\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__64\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__640\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__640\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__640\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__640\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__640\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__641\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__641\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__641\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__641\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__641\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__642\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__642\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__642\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__642\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__642\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__643\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__643\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__643\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__643\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__643\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__644\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__644\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__644\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__644\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__644\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__645\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__645\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__645\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__645\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__645\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__646\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__646\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__646\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__646\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__646\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__647\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__647\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__647\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__647\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__647\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__648\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__648\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__648\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__648\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__648\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__649\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__649\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__649\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__649\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__649\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__65\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__65\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__65\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__65\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__65\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__650\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__650\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__650\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__650\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__650\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__651\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__651\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__651\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__651\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__651\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__652\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__652\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__652\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__652\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__652\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__653\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__653\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__653\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__653\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__653\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__654\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__654\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__654\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__654\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__654\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__655\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__655\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__655\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__655\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__655\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__656\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__656\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__656\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__656\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__656\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__657\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__657\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__657\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__657\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__657\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__658\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__658\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__658\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__658\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__658\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__659\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__659\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__659\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__659\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__659\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__66\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__66\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__66\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__66\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__66\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__660\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__660\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__660\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__660\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__660\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__661\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__661\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__661\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__661\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__661\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__662\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__662\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__662\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__662\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__662\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__663\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__663\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__663\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__663\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__663\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__664\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__664\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__664\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__664\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__664\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__665\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__665\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__665\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__665\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__665\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__666\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__666\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__666\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__666\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__666\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__667\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__667\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__667\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__667\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__667\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__668\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__668\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__668\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__668\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__668\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__669\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__669\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__669\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__669\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__669\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__67\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__67\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__67\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__67\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__67\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__670\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__670\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__670\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__670\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__670\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__671\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__671\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__671\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__671\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__671\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__672\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__672\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__672\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__672\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__672\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__673\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__673\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__673\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__673\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__673\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__674\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__674\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__674\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__674\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__674\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__675\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__675\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__675\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__675\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__675\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__676\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__676\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__676\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__676\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__676\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__677\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__677\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__677\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__677\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__677\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__678\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__678\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__678\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__678\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__678\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__679\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__679\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__679\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__679\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__679\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__68\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__68\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__68\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__68\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__68\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__680\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__680\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__680\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__680\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__680\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__681\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__681\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__681\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__681\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__681\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__682\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__682\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__682\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__682\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__682\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__683\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__683\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__683\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__683\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__683\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__684\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__684\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__684\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__684\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__684\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__685\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__685\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__685\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__685\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__685\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__686\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__686\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__686\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__686\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__686\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__687\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__687\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__687\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__687\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__687\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__688\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__688\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__688\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__688\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__688\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__689\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__689\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__689\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__689\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__689\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__69\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__69\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__69\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__69\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__69\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__690\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__690\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__690\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__690\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__690\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__691\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__691\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__691\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__691\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__691\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__692\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__692\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__692\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__692\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__692\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__693\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__693\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__693\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__693\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__693\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__694\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__694\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__694\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__694\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__694\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__695\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__695\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__695\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__695\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__695\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__696\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__696\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__696\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__696\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__696\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__697\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__697\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__697\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__697\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__697\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__698\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__698\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__698\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__698\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__698\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__699\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__699\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__699\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__699\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__699\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__7\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__7\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__7\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__7\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__7\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__70\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__70\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__70\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__70\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__70\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__700\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__700\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__700\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__700\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__700\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__701\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__701\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__701\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__701\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__701\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__702\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__702\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__702\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__702\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__702\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__703\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__703\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__703\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__703\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__703\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__704\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__704\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__704\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__704\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__704\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__705\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__705\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__705\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__705\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__705\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__706\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__706\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__706\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__706\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__706\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__707\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__707\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__707\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__707\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__707\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__708\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__708\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__708\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__708\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__708\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__709\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__709\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__709\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__709\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__709\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__71\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__71\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__71\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__71\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__71\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__710\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__710\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__710\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__710\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__710\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__711\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__711\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__711\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__711\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__711\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__712\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__712\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__712\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__712\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__712\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__713\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__713\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__713\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__713\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__713\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__714\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__714\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__714\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__714\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__714\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__715\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__715\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__715\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__715\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__715\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__716\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__716\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__716\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__716\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__716\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__717\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__717\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__717\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__717\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__717\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__718\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__718\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__718\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__718\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__718\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__719\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__719\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__719\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__719\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__719\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__72\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__72\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__72\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__72\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__72\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__720\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__720\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__720\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__720\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__720\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__721\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__721\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__721\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__721\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__721\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__722\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__722\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__722\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__722\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__722\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__723\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__723\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__723\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__723\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__723\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__724\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__724\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__724\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__724\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__724\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__725\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__725\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__725\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__725\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__725\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__726\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__726\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__726\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__726\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__726\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__727\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__727\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__727\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__727\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__727\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__728\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__728\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__728\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__728\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__728\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__729\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__729\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__729\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__729\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__729\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__73\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__73\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__73\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__73\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__73\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__730\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__730\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__730\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__730\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__730\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__731\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__731\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__731\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__731\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__731\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__732\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__732\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__732\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__732\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__732\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__733\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__733\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__733\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__733\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__733\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__734\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__734\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__734\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__734\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__734\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__735\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__735\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__735\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__735\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__735\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__736\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__736\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__736\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__736\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__736\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__737\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__737\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__737\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__737\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__737\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__738\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__738\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__738\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__738\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__738\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__739\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__739\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__739\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__739\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__739\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__74\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__74\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__74\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__74\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__74\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__740\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__740\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__740\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__740\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__740\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__741\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__741\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__741\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__741\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__741\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__742\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__742\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__742\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__742\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__742\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__743\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__743\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__743\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__743\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__743\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__744\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__744\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__744\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__744\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__744\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__745\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__745\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__745\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__745\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__745\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__746\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__746\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__746\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__746\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__746\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__747\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__747\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__747\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__747\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__747\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__748\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__748\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__748\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__748\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__748\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__749\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__749\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__749\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__749\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__749\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__75\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__75\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__75\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__75\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__75\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__750\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__750\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__750\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__750\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__750\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__751\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__751\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__751\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__751\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__751\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__752\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__752\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__752\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__752\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__752\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__753\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__753\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__753\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__753\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__753\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__754\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__754\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__754\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__754\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__754\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__755\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__755\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__755\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__755\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__755\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__756\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__756\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__756\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__756\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__756\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__757\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__757\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__757\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__757\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__757\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__758\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__758\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__758\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__758\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__758\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__759\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__759\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__759\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__759\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__759\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__76\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__76\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__76\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__76\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__76\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__760\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__760\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__760\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__760\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__760\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__761\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__761\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__761\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__761\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__761\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__762\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__762\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__762\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__762\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__762\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__763\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__763\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__763\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__763\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__763\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__764\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__764\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__764\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__764\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__764\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__765\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__765\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__765\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__765\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__765\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__766\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__766\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__766\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__766\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__766\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__767\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__767\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__767\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__767\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__767\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__768\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__768\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__768\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__768\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__768\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__769\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__769\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__769\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__769\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__769\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__77\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__77\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__77\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__77\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__77\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__770\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__770\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__770\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__770\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__770\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__771\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__771\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__771\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__771\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__771\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__772\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__772\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__772\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__772\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__772\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__773\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__773\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__773\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__773\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__773\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__774\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__774\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__774\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__774\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__774\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__775\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__775\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__775\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__775\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__775\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__776\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__776\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__776\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__776\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__776\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__777\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__777\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__777\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__777\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__777\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__778\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__778\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__778\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__778\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__778\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__779\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__779\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__779\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__779\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__779\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__78\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__78\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__78\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__78\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__78\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__780\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__780\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__780\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__780\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__780\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__781\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__781\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__781\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__781\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__781\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__782\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__782\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__782\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__782\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__782\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__783\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__783\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__783\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__783\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__783\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__784\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__784\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__784\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__784\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__784\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__785\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__785\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__785\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__785\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__785\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__786\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__786\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__786\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__786\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__786\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__787\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__787\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__787\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__787\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__787\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__788\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__788\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__788\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__788\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__788\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__789\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__789\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__789\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__789\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__789\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__79\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__79\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__79\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__79\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__79\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__790\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__790\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__790\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__790\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__790\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__791\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__791\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__791\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__791\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__791\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__792\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__792\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__792\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__792\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__792\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__793\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__793\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__793\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__793\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__793\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__794\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__794\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__794\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__794\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__794\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__795\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__795\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__795\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__795\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__795\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__796\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__796\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__796\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__796\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__796\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__797\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__797\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__797\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__797\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__797\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__798\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__798\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__798\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__798\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__798\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__799\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__799\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__799\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__799\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__799\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__8\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__8\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__8\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__8\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__8\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__80\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__80\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__80\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__80\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__80\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__800\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__800\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__800\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__800\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__800\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__801\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__801\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__801\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__801\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__801\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__802\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__802\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__802\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__802\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__802\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__803\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__803\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__803\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__803\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__803\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__804\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__804\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__804\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__804\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__804\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__805\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__805\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__805\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__805\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__805\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__806\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__806\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__806\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__806\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__806\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__807\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__807\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__807\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__807\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__807\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__808\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__808\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__808\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__808\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__808\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__809\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__809\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__809\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__809\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__809\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__81\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__81\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__81\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__81\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__81\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__810\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__810\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__810\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__810\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__810\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__811\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__811\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__811\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__811\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__811\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__812\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__812\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__812\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__812\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__812\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__813\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__813\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__813\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__813\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__813\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__814\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__814\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__814\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__814\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__814\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__815\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__815\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__815\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__815\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__815\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__816\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__816\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__816\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__816\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__816\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__817\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__817\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__817\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__817\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__817\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__818\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__818\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__818\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__818\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__818\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__819\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__819\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__819\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__819\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__819\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__82\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__82\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__82\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__82\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__82\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__820\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__820\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__820\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__820\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__820\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__821\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__821\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__821\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__821\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__821\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__822\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__822\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__822\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__822\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__822\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__823\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__823\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__823\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__823\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__823\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__824\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__824\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__824\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__824\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__824\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__825\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__825\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__825\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__825\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__825\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__826\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__826\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__826\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__826\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__826\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__827\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__827\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__827\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__827\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__827\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__828\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__828\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__828\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__828\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__828\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__829\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__829\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__829\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__829\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__829\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__83\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__83\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__83\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__83\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__83\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__830\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__830\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__830\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__830\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__830\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__831\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__831\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__831\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__831\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__831\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__832\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__832\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__832\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__832\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__832\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__833\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__833\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__833\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__833\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__833\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__834\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__834\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__834\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__834\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__834\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__835\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__835\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__835\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__835\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__835\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__836\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__836\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__836\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__836\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__836\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__837\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__837\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__837\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__837\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__837\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__838\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__838\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__838\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__838\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__838\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__839\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__839\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__839\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__839\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__839\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__84\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__84\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__84\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__84\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__84\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__840\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__840\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__840\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__840\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__840\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__841\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__841\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__841\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__841\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__841\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__842\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__842\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__842\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__842\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__842\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__843\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__843\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__843\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__843\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__843\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__844\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__844\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__844\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__844\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__844\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__845\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__845\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__845\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__845\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__845\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__846\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__846\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__846\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__846\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__846\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__847\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__847\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__847\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__847\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__847\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__848\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__848\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__848\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__848\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__848\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__849\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__849\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__849\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__849\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__849\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__85\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__85\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__85\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__85\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__85\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__850\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__850\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__850\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__850\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__850\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__851\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__851\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__851\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__851\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__851\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__852\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__852\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__852\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__852\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__852\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__853\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__853\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__853\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__853\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__853\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__854\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__854\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__854\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__854\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__854\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__855\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__855\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__855\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__855\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__855\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__856\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__856\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__856\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__856\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__856\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__857\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__857\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__857\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__857\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__857\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__858\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__858\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__858\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__858\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__858\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__859\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__859\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__859\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__859\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__859\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__86\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__86\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__86\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__86\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__86\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__860\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__860\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__860\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__860\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__860\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__861\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__861\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__861\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__861\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__861\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__862\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__862\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__862\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__862\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__862\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__863\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__863\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__863\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__863\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__863\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__864\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__864\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__864\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__864\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__864\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__865\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__865\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__865\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__865\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__865\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__866\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__866\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__866\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__866\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__866\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__867\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__867\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__867\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__867\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__867\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__868\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__868\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__868\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__868\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__868\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__869\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__869\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__869\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__869\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__869\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__87\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__87\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__87\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__87\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__87\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__870\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__870\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__870\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__870\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__870\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__871\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__871\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__871\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__871\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__871\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__872\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__872\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__872\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__872\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__872\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__873\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__873\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__873\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__873\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__873\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__874\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__874\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__874\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__874\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__874\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__875\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__875\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__875\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__875\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__875\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__876\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__876\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__876\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__876\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__876\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__877\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__877\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__877\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__877\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__877\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__878\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__878\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__878\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__878\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__878\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__879\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__879\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__879\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__879\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__879\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__88\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__88\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__88\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__88\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__88\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__880\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__880\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__880\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__880\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__880\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__881\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__881\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__881\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__881\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__881\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__882\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__882\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__882\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__882\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__882\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__883\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__883\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__883\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__883\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__883\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__884\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__884\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__884\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__884\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__884\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__885\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__885\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__885\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__885\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__885\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__886\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__886\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__886\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__886\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__886\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__887\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__887\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__887\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__887\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__887\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__888\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__888\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__888\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__888\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__888\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__889\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__889\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__889\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__889\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__889\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__89\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__89\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__89\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__89\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__89\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__890\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__890\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__890\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__890\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__890\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__891\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__891\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__891\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__891\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__891\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__892\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__892\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__892\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__892\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__892\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__893\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__893\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__893\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__893\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__893\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__894\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__894\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__894\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__894\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__894\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__895\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__895\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__895\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__895\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__895\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__896\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__896\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__896\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__896\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__896\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__897\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__897\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__897\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__897\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__897\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__898\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__898\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__898\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__898\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__898\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__899\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__899\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__899\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__899\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__899\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__9\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__9\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__9\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__9\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__9\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__90\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__90\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__90\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__90\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__90\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__900\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__900\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__900\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__900\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__900\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__901\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__901\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__901\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__901\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__901\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__902\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__902\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__902\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__902\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__902\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__903\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__903\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__903\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__903\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__903\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__904\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__904\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__904\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__904\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__904\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__905\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__905\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__905\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__905\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__905\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__906\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__906\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__906\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__906\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__906\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__907\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__907\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__907\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__907\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__907\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__908\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__908\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__908\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__908\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__908\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__909\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__909\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__909\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__909\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__909\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__91\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__91\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__91\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__91\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__91\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__910\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__910\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__910\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__910\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__910\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__911\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__911\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__911\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__911\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__911\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__912\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__912\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__912\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__912\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__912\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__913\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__913\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__913\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__913\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__913\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__914\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__914\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__914\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__914\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__914\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__915\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__915\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__915\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__915\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__915\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__916\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__916\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__916\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__916\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__916\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__917\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__917\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__917\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__917\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__917\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__918\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__918\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__918\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__918\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__918\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__919\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__919\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__919\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__919\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__919\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__92\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__92\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__92\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__92\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__92\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__920\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__920\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__920\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__920\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__920\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__921\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__921\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__921\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__921\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__921\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__922\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__922\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__922\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__922\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__922\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__923\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__923\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__923\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__923\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__923\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__924\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__924\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__924\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__924\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__924\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__925\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__925\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__925\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__925\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__925\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__926\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__926\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__926\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__926\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__926\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__927\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__927\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__927\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__927\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__927\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__928\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__928\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__928\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__928\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__928\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__929\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__929\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__929\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__929\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__929\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__93\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__93\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__93\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__93\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__93\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__930\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__930\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__930\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__930\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__930\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__931\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__931\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__931\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__931\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__931\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__932\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__932\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__932\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__932\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__932\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__933\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__933\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__933\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__933\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__933\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__934\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__934\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__934\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__934\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__934\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__935\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__935\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__935\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__935\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__935\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__936\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__936\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__936\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__936\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__936\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__937\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__937\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__937\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__937\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__937\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__938\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__938\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__938\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__938\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__938\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__939\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__939\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__939\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__939\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__939\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__94\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__94\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__94\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__94\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__94\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__940\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__940\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__940\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__940\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__940\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__941\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__941\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__941\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__941\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__941\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__942\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__942\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__942\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__942\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__942\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__943\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__943\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__943\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__943\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__943\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__944\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__944\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__944\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__944\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__944\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__945\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__945\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__945\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__945\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__945\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__946\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__946\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__946\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__946\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__946\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__947\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__947\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__947\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__947\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__947\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__948\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__948\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__948\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__948\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__948\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__949\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__949\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__949\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__949\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__949\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__95\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__95\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__95\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__95\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__95\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__950\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__950\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__950\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__950\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__950\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__951\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__951\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__951\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__951\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__951\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__952\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__952\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__952\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__952\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__952\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__953\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__953\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__953\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__953\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__953\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__954\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__954\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__954\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__954\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__954\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__955\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__955\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__955\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__955\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__955\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__956\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__956\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__956\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__956\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__956\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__957\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__957\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__957\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__957\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__957\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__958\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__958\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__958\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__958\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__958\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__959\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__959\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__959\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__959\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__959\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__96\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__96\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__96\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__96\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__96\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__960\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__960\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__960\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__960\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__960\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__961\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__961\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__961\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__961\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__961\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__962\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__962\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__962\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__962\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__962\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__963\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__963\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__963\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__963\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__963\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__964\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__964\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__964\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__964\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__964\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__965\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__965\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__965\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__965\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__965\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__966\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__966\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__966\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__966\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__966\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__967\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__967\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__967\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__967\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__967\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__968\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__968\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__968\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__968\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__968\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__969\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__969\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__969\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__969\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__969\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__97\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__97\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__97\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__97\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__97\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__970\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__970\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__970\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__970\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__970\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__971\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__971\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__971\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__971\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__971\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__972\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__972\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__972\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__972\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__972\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__973\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__973\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__973\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__973\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__973\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__974\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__974\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__974\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__974\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__974\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__975\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__975\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__975\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__975\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__975\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__976\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__976\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__976\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__976\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__976\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__977\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__977\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__977\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__977\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__977\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__978\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__978\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__978\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__978\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__978\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__979\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__979\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__979\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__979\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__979\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__98\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__98\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__98\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__98\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__98\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__980\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__980\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__980\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__980\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__980\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__981\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__981\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__981\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__981\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__981\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__982\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__982\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__982\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__982\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__982\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__983\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__983\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__983\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__983\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__983\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__984\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__984\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__984\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__984\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__984\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__985\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__985\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__985\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__985\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__985\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__986\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__986\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__986\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__986\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__986\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__987\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__987\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__987\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__987\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__987\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__988\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__988\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__988\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__988\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__988\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__989\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__989\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__989\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__989\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__989\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__99\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__99\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__99\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__99\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__99\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__990\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__990\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__990\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__990\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__990\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__991\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__991\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__991\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__991\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__991\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__992\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__992\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__992\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__992\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__992\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__993\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__993\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__993\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__993\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__993\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__994\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__994\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__994\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__994\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__994\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__995\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__995\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__995\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__995\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__995\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__996\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__996\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__996\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__996\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__996\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__997\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__997\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__997\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__997\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__997\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__998\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__998\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__998\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__998\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__998\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__999\ is
  port (
    enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__999\ : entity is "power_virus_single_RO";
  attribute dont_touch : string;
  attribute dont_touch of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__999\ : entity is "true";
end \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__999\;

architecture STRUCTURE of \z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__999\ is
  signal RO_pulse : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of RO_pulse : signal is std.standard.true;
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of LUT2_PV_RO : label is "PRIMITIVE";
  attribute DONT_TOUCH_boolean of LUT2_PV_RO : label is std.standard.true;
begin
LUT2_PV_RO: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => RO_pulse,
      I1 => enable,
      O => RO_pulse
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity z2_voltage_experiments_power_virus_wrap_0_0_power_virus is
  port (
    clk_200MHz : in STD_LOGIC;
    num_power_virus_enabled : in STD_LOGIC_VECTOR ( 15 downto 0 );
    dummy : out STD_LOGIC
  );
  attribute LOG_NUM_PV_INSTANCES : integer;
  attribute LOG_NUM_PV_INSTANCES of z2_voltage_experiments_power_virus_wrap_0_0_power_virus : entity is 15;
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of z2_voltage_experiments_power_virus_wrap_0_0_power_virus : entity is "power_virus";
  attribute PV_TYPE : integer;
  attribute PV_TYPE of z2_voltage_experiments_power_virus_wrap_0_0_power_virus : entity is 0;
  attribute dont_touch : string;
  attribute dont_touch of z2_voltage_experiments_power_virus_wrap_0_0_power_virus : entity is "true";
end z2_voltage_experiments_power_virus_wrap_0_0_power_virus;

architecture STRUCTURE of z2_voltage_experiments_power_virus_wrap_0_0_power_virus is
  signal \^dummy\ : STD_LOGIC;
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of dummy : signal is std.standard.true;
  signal \num_power_virus_enabled_latched_reg_n_0_[10]\ : STD_LOGIC;
  signal \num_power_virus_enabled_latched_reg_n_0_[11]\ : STD_LOGIC;
  signal \num_power_virus_enabled_latched_reg_n_0_[12]\ : STD_LOGIC;
  signal \num_power_virus_enabled_latched_reg_n_0_[13]\ : STD_LOGIC;
  signal \num_power_virus_enabled_latched_reg_n_0_[14]\ : STD_LOGIC;
  signal \num_power_virus_enabled_latched_reg_n_0_[15]\ : STD_LOGIC;
  signal \num_power_virus_enabled_latched_reg_n_0_[2]\ : STD_LOGIC;
  signal \num_power_virus_enabled_latched_reg_n_0_[3]\ : STD_LOGIC;
  signal \num_power_virus_enabled_latched_reg_n_0_[4]\ : STD_LOGIC;
  signal \num_power_virus_enabled_latched_reg_n_0_[5]\ : STD_LOGIC;
  signal \num_power_virus_enabled_latched_reg_n_0_[6]\ : STD_LOGIC;
  signal \num_power_virus_enabled_latched_reg_n_0_[7]\ : STD_LOGIC;
  signal \num_power_virus_enabled_latched_reg_n_0_[8]\ : STD_LOGIC;
  signal \num_power_virus_enabled_latched_reg_n_0_[9]\ : STD_LOGIC;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[0].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[10].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[11].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[12].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[13].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[14].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[15].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[16].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[17].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[18].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[19].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[1].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[20].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[21].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[22].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[23].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[24].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[25].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[26].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[27].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[28].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[29].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[2].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[30].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[31].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[32].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[33].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[34].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[35].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[36].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[37].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[38].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[39].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[3].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[40].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[41].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[42].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[43].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[44].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[45].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[46].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[47].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[48].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[49].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[4].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[50].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[51].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[52].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[53].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[54].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[55].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[56].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[57].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[58].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[59].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[5].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[60].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[61].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[62].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[63].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[64].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[65].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[66].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[67].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[68].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[69].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[6].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[70].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[71].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[72].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[73].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[74].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[75].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[76].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[77].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[78].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[79].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[7].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[80].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[81].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[82].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[83].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[84].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[85].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[86].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[87].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[88].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[89].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[8].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[90].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[91].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[92].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[93].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[94].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[95].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[96].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[97].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[98].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[99].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[10].gen_index[9].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[0].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[100].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[101].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[102].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[103].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[104].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[105].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[106].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[107].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[108].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[109].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[10].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[110].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[111].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[112].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[113].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[114].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[115].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[116].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[117].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[118].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[119].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[11].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[120].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[12].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[13].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[14].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[15].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[16].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[17].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[18].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[19].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[1].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[20].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[21].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[22].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[23].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[24].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[25].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[26].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[27].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[28].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[29].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[2].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[30].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[31].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[32].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[33].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[34].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[35].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[36].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[37].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[38].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[39].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[3].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[40].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[41].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[42].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[43].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[44].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[45].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[46].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[47].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[48].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[49].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[4].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[50].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[51].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[52].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[53].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[54].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[55].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[56].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[57].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[58].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[59].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[5].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[60].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[61].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[62].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[63].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[64].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[65].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[66].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[67].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[68].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[69].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[6].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[70].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[71].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[72].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[73].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[74].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[75].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[76].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[77].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[78].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[79].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[7].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[80].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[81].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[82].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[83].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[84].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[85].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[86].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[87].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[88].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[89].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[8].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[90].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[91].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[92].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[93].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[94].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[95].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[96].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[97].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[98].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[99].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[11].gen_index[9].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[0].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[100].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[101].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[102].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[103].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[104].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[105].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[106].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[107].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[108].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[109].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[10].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[110].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[111].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[112].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[113].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[114].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[115].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[116].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[117].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[118].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[119].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[11].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[120].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[121].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[122].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[123].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[124].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[125].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[126].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[127].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[128].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[129].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[12].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[130].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[131].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[132].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[133].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[134].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[135].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[136].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[137].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[138].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[139].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[13].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[140].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[141].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[142].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[143].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[14].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[15].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[16].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[17].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[18].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[19].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[1].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[20].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[21].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[22].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[23].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[24].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[25].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[26].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[27].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[28].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[29].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[2].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[30].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[31].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[32].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[33].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[34].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[35].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[36].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[37].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[38].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[39].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[3].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[40].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[41].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[42].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[43].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[44].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[45].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[46].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[47].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[48].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[49].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[4].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[50].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[51].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[52].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[53].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[54].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[55].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[56].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[57].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[58].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[59].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[5].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[60].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[61].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[62].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[63].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[64].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[65].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[66].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[67].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[68].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[69].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[6].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[70].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[71].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[72].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[73].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[74].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[75].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[76].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[77].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[78].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[79].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[7].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[80].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[81].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[82].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[83].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[84].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[85].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[86].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[87].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[88].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[89].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[8].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[90].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[91].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[92].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[93].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[94].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[95].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[96].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[97].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[98].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[99].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[12].gen_index[9].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[0].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[100].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[101].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[102].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[103].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[104].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[105].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[106].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[107].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[108].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[109].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[10].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[110].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[111].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[112].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[113].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[114].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[115].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[116].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[117].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[118].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[119].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[11].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[120].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[121].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[122].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[123].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[124].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[125].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[126].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[127].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[128].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[129].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[12].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[130].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[131].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[132].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[133].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[134].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[135].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[136].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[137].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[138].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[139].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[13].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[140].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[141].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[142].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[143].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[144].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[145].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[146].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[147].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[148].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[149].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[14].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[150].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[151].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[152].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[153].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[154].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[155].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[156].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[157].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[158].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[159].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[15].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[160].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[161].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[162].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[163].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[164].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[165].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[166].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[167].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[168].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[16].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[17].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[18].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[19].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[1].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[20].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[21].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[22].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[23].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[24].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[25].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[26].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[27].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[28].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[29].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[2].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[30].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[31].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[32].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[33].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[34].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[35].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[36].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[37].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[38].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[39].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[3].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[40].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[41].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[42].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[43].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[44].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[45].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[46].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[47].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[48].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[49].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[4].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[50].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[51].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[52].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[53].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[54].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[55].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[56].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[57].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[58].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[59].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[5].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[60].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[61].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[62].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[63].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[64].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[65].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[66].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[67].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[68].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[69].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[6].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[70].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[71].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[72].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[73].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[74].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[75].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[76].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[77].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[78].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[79].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[7].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[80].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[81].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[82].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[83].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[84].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[85].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[86].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[87].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[88].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[89].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[8].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[90].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[91].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[92].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[93].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[94].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[95].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[96].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[97].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[98].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[99].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[13].gen_index[9].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[0].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[100].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[101].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[102].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[103].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[104].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[105].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[106].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[107].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[108].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[109].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[10].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[110].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[111].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[112].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[113].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[114].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[115].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[116].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[117].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[118].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[119].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[11].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[120].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[121].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[122].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[123].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[124].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[125].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[126].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[127].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[128].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[129].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[12].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[130].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[131].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[132].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[133].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[134].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[135].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[136].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[137].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[138].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[139].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[13].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[140].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[141].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[142].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[143].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[144].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[145].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[146].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[147].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[148].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[149].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[14].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[150].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[151].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[152].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[153].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[154].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[155].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[156].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[157].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[158].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[159].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[15].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[160].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[161].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[162].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[163].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[164].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[165].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[166].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[167].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[168].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[169].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[16].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[170].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[171].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[172].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[173].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[174].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[175].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[176].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[177].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[178].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[179].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[17].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[180].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[181].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[182].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[183].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[184].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[185].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[186].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[187].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[188].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[189].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[18].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[190].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[191].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[192].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[193].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[194].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[195].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[19].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[1].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[20].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[21].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[22].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[23].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[24].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[25].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[26].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[27].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[28].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[29].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[2].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[30].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[31].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[32].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[33].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[34].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[35].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[36].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[37].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[38].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[39].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[3].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[40].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[41].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[42].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[43].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[44].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[45].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[46].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[47].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[48].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[49].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[4].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[50].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[51].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[52].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[53].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[54].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[55].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[56].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[57].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[58].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[59].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[5].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[60].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[61].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[62].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[63].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[64].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[65].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[66].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[67].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[68].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[69].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[6].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[70].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[71].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[72].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[73].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[74].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[75].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[76].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[77].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[78].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[79].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[7].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[80].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[81].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[82].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[83].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[84].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[85].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[86].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[87].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[88].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[89].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[8].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[90].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[91].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[92].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[93].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[94].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[95].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[96].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[97].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[98].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[99].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[14].gen_index[9].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[0].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[100].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[101].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[102].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[103].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[104].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[105].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[106].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[107].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[108].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[109].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[10].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[110].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[111].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[112].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[113].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[114].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[115].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[116].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[117].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[118].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[119].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[11].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[120].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[121].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[122].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[123].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[124].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[125].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[126].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[127].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[128].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[129].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[12].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[130].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[131].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[132].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[133].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[134].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[135].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[136].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[137].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[138].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[139].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[13].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[140].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[141].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[142].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[143].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[144].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[145].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[146].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[147].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[148].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[149].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[14].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[150].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[151].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[152].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[153].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[154].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[155].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[156].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[157].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[158].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[159].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[15].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[160].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[161].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[162].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[163].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[164].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[165].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[166].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[167].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[168].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[169].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[16].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[170].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[171].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[172].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[173].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[174].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[175].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[176].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[177].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[178].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[179].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[17].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[180].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[181].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[182].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[183].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[184].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[185].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[186].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[187].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[188].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[189].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[18].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[190].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[191].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[192].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[193].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[194].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[195].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[196].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[197].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[198].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[199].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[19].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[1].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[200].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[201].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[202].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[203].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[204].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[205].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[206].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[207].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[208].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[209].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[20].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[210].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[211].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[212].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[213].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[214].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[215].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[216].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[217].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[218].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[219].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[21].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[220].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[221].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[222].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[223].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[224].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[22].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[23].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[24].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[25].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[26].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[27].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[28].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[29].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[2].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[30].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[31].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[32].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[33].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[34].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[35].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[36].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[37].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[38].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[39].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[3].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[40].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[41].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[42].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[43].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[44].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[45].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[46].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[47].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[48].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[49].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[4].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[50].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[51].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[52].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[53].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[54].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[55].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[56].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[57].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[58].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[59].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[5].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[60].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[61].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[62].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[63].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[64].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[65].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[66].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[67].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[68].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[69].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[6].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[70].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[71].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[72].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[73].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[74].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[75].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[76].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[77].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[78].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[79].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[7].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[80].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[81].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[82].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[83].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[84].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[85].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[86].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[87].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[88].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[89].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[8].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[90].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[91].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[92].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[93].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[94].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[95].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[96].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[97].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[98].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[99].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[15].gen_index[9].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[1].gen_index[0].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[2].gen_index[0].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[2].gen_index[1].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[2].gen_index[2].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[2].gen_index[3].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[3].gen_index[0].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[3].gen_index[1].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[3].gen_index[2].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[3].gen_index[3].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[3].gen_index[4].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[3].gen_index[5].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[3].gen_index[6].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[3].gen_index[7].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[3].gen_index[8].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[4].gen_index[0].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[4].gen_index[10].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[4].gen_index[11].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[4].gen_index[12].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[4].gen_index[13].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[4].gen_index[14].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[4].gen_index[15].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[4].gen_index[1].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[4].gen_index[2].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[4].gen_index[3].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[4].gen_index[4].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[4].gen_index[5].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[4].gen_index[6].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[4].gen_index[7].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[4].gen_index[8].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[4].gen_index[9].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[5].gen_index[0].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[5].gen_index[10].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[5].gen_index[11].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[5].gen_index[12].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[5].gen_index[13].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[5].gen_index[14].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[5].gen_index[15].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[5].gen_index[16].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[5].gen_index[17].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[5].gen_index[18].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[5].gen_index[19].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[5].gen_index[1].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[5].gen_index[20].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[5].gen_index[21].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[5].gen_index[22].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[5].gen_index[23].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[5].gen_index[24].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[5].gen_index[2].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[5].gen_index[3].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[5].gen_index[4].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[5].gen_index[5].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[5].gen_index[6].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[5].gen_index[7].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[5].gen_index[8].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[5].gen_index[9].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[6].gen_index[0].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[6].gen_index[10].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[6].gen_index[11].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[6].gen_index[12].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[6].gen_index[13].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[6].gen_index[14].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[6].gen_index[15].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[6].gen_index[16].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[6].gen_index[17].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[6].gen_index[18].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[6].gen_index[19].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[6].gen_index[1].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[6].gen_index[20].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[6].gen_index[21].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[6].gen_index[22].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[6].gen_index[23].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[6].gen_index[24].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[6].gen_index[25].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[6].gen_index[26].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[6].gen_index[27].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[6].gen_index[28].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[6].gen_index[29].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[6].gen_index[2].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[6].gen_index[30].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[6].gen_index[31].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[6].gen_index[32].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[6].gen_index[33].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[6].gen_index[34].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[6].gen_index[35].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[6].gen_index[3].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[6].gen_index[4].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[6].gen_index[5].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[6].gen_index[6].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[6].gen_index[7].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[6].gen_index[8].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[6].gen_index[9].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[7].gen_index[0].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[7].gen_index[10].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[7].gen_index[11].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[7].gen_index[12].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[7].gen_index[13].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[7].gen_index[14].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[7].gen_index[15].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[7].gen_index[16].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[7].gen_index[17].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[7].gen_index[18].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[7].gen_index[19].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[7].gen_index[1].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[7].gen_index[20].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[7].gen_index[21].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[7].gen_index[22].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[7].gen_index[23].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[7].gen_index[24].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[7].gen_index[25].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[7].gen_index[26].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[7].gen_index[27].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[7].gen_index[28].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[7].gen_index[29].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[7].gen_index[2].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[7].gen_index[30].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[7].gen_index[31].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[7].gen_index[32].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[7].gen_index[33].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[7].gen_index[34].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[7].gen_index[35].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[7].gen_index[36].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[7].gen_index[37].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[7].gen_index[38].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[7].gen_index[39].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[7].gen_index[3].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[7].gen_index[40].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[7].gen_index[41].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[7].gen_index[42].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[7].gen_index[43].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[7].gen_index[44].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[7].gen_index[45].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[7].gen_index[46].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[7].gen_index[47].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[7].gen_index[48].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[7].gen_index[4].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[7].gen_index[5].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[7].gen_index[6].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[7].gen_index[7].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[7].gen_index[8].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[7].gen_index[9].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[8].gen_index[0].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[8].gen_index[10].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[8].gen_index[11].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[8].gen_index[12].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[8].gen_index[13].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[8].gen_index[14].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[8].gen_index[15].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[8].gen_index[16].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[8].gen_index[17].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[8].gen_index[18].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[8].gen_index[19].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[8].gen_index[1].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[8].gen_index[20].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[8].gen_index[21].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[8].gen_index[22].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[8].gen_index[23].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[8].gen_index[24].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[8].gen_index[25].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[8].gen_index[26].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[8].gen_index[27].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[8].gen_index[28].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[8].gen_index[29].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[8].gen_index[2].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[8].gen_index[30].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[8].gen_index[31].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[8].gen_index[32].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[8].gen_index[33].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[8].gen_index[34].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[8].gen_index[35].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[8].gen_index[36].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[8].gen_index[37].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[8].gen_index[38].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[8].gen_index[39].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[8].gen_index[3].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[8].gen_index[40].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[8].gen_index[41].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[8].gen_index[42].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[8].gen_index[43].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[8].gen_index[44].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[8].gen_index[45].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[8].gen_index[46].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[8].gen_index[47].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[8].gen_index[48].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[8].gen_index[49].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[8].gen_index[4].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[8].gen_index[50].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[8].gen_index[51].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[8].gen_index[52].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[8].gen_index[53].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[8].gen_index[54].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[8].gen_index[55].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[8].gen_index[56].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[8].gen_index[57].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[8].gen_index[58].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[8].gen_index[59].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[8].gen_index[5].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[8].gen_index[60].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[8].gen_index[61].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[8].gen_index[62].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[8].gen_index[63].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[8].gen_index[6].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[8].gen_index[7].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[8].gen_index[8].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[8].gen_index[9].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[9].gen_index[0].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[9].gen_index[10].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[9].gen_index[11].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[9].gen_index[12].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[9].gen_index[13].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[9].gen_index[14].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[9].gen_index[15].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[9].gen_index[16].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[9].gen_index[17].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[9].gen_index[18].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[9].gen_index[19].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[9].gen_index[1].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[9].gen_index[20].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[9].gen_index[21].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[9].gen_index[22].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[9].gen_index[23].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[9].gen_index[24].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[9].gen_index[25].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[9].gen_index[26].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[9].gen_index[27].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[9].gen_index[28].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[9].gen_index[29].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[9].gen_index[2].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[9].gen_index[30].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[9].gen_index[31].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[9].gen_index[32].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[9].gen_index[33].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[9].gen_index[34].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[9].gen_index[35].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[9].gen_index[36].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[9].gen_index[37].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[9].gen_index[38].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[9].gen_index[39].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[9].gen_index[3].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[9].gen_index[40].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[9].gen_index[41].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[9].gen_index[42].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[9].gen_index[43].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[9].gen_index[44].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[9].gen_index[45].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[9].gen_index[46].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[9].gen_index[47].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[9].gen_index[48].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[9].gen_index[49].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[9].gen_index[4].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[9].gen_index[50].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[9].gen_index[51].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[9].gen_index[52].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[9].gen_index[53].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[9].gen_index[54].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[9].gen_index[55].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[9].gen_index[56].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[9].gen_index[57].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[9].gen_index[58].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[9].gen_index[59].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[9].gen_index[5].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[9].gen_index[60].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[9].gen_index[61].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[9].gen_index[62].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[9].gen_index[63].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[9].gen_index[64].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[9].gen_index[65].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[9].gen_index[66].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[9].gen_index[67].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[9].gen_index[68].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[9].gen_index[69].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[9].gen_index[6].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[9].gen_index[70].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[9].gen_index[71].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[9].gen_index[72].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[9].gen_index[73].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[9].gen_index[74].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[9].gen_index[75].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[9].gen_index[76].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[9].gen_index[77].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[9].gen_index[78].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[9].gen_index[79].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[9].gen_index[7].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[9].gen_index[80].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[9].gen_index[8].pvsRO\ : label is std.standard.true;
  attribute DONT_TOUCH_boolean of \gen_size[9].gen_index[9].pvsRO\ : label is std.standard.true;
  attribute dont_touch of dummy : signal is "true";
begin
  dummy <= \^dummy\;
\gen_size[10].gen_index[0].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__286\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[10].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__296\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[11].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__297\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[12].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__298\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[13].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__299\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[14].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__300\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[15].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__301\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[16].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__302\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[17].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__303\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[18].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__304\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[19].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__305\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[1].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__287\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[20].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__306\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[21].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__307\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[22].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__308\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[23].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__309\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[24].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__310\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[25].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__311\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[26].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__312\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[27].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__313\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[28].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__314\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[29].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__315\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[2].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__288\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[30].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__316\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[31].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__317\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[32].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__318\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[33].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__319\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[34].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__320\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[35].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__321\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[36].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__322\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[37].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__323\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[38].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__324\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[39].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__325\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[3].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__289\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[40].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__326\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[41].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__327\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[42].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__328\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[43].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__329\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[44].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__330\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[45].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__331\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[46].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__332\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[47].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__333\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[48].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__334\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[49].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__335\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[4].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__290\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[50].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__336\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[51].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__337\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[52].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__338\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[53].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__339\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[54].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__340\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[55].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__341\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[56].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__342\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[57].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__343\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[58].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__344\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[59].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__345\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[5].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__291\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[60].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__346\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[61].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__347\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[62].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__348\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[63].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__349\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[64].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__350\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[65].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__351\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[66].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__352\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[67].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__353\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[68].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__354\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[69].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__355\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[6].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__292\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[70].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__356\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[71].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__357\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[72].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__358\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[73].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__359\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[74].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__360\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[75].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__361\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[76].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__362\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[77].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__363\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[78].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__364\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[79].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__365\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[7].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__293\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[80].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__366\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[81].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__367\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[82].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__368\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[83].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__369\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[84].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__370\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[85].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__371\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[86].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__372\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[87].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__373\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[88].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__374\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[89].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__375\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[8].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__294\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[90].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__376\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[91].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__377\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[92].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__378\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[93].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__379\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[94].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__380\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[95].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__381\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[96].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__382\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[97].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__383\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[98].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__384\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[99].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__385\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[10].gen_index[9].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__295\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[10]\
    );
\gen_size[11].gen_index[0].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__386\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[100].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__486\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[101].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__487\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[102].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__488\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[103].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__489\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[104].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__490\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[105].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__491\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[106].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__492\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[107].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__493\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[108].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__494\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[109].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__495\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[10].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__396\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[110].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__496\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[111].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__497\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[112].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__498\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[113].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__499\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[114].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__500\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[115].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__501\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[116].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__502\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[117].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__503\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[118].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__504\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[119].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__505\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[11].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__397\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[120].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__506\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[12].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__398\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[13].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__399\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[14].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__400\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[15].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__401\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[16].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__402\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[17].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__403\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[18].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__404\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[19].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__405\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[1].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__387\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[20].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__406\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[21].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__407\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[22].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__408\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[23].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__409\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[24].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__410\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[25].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__411\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[26].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__412\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[27].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__413\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[28].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__414\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[29].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__415\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[2].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__388\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[30].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__416\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[31].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__417\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[32].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__418\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[33].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__419\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[34].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__420\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[35].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__421\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[36].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__422\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[37].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__423\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[38].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__424\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[39].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__425\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[3].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__389\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[40].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__426\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[41].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__427\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[42].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__428\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[43].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__429\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[44].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__430\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[45].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__431\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[46].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__432\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[47].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__433\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[48].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__434\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[49].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__435\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[4].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__390\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[50].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__436\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[51].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__437\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[52].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__438\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[53].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__439\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[54].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__440\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[55].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__441\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[56].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__442\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[57].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__443\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[58].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__444\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[59].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__445\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[5].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__391\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[60].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__446\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[61].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__447\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[62].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__448\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[63].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__449\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[64].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__450\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[65].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__451\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[66].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__452\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[67].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__453\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[68].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__454\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[69].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__455\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[6].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__392\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[70].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__456\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[71].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__457\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[72].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__458\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[73].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__459\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[74].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__460\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[75].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__461\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[76].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__462\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[77].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__463\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[78].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__464\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[79].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__465\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[7].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__393\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[80].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__466\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[81].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__467\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[82].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__468\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[83].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__469\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[84].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__470\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[85].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__471\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[86].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__472\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[87].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__473\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[88].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__474\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[89].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__475\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[8].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__394\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[90].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__476\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[91].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__477\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[92].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__478\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[93].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__479\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[94].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__480\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[95].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__481\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[96].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__482\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[97].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__483\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[98].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__484\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[99].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__485\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[11].gen_index[9].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__395\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[11]\
    );
\gen_size[12].gen_index[0].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__507\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[100].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__607\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[101].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__608\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[102].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__609\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[103].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__610\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[104].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__611\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[105].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__612\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[106].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__613\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[107].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__614\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[108].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__615\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[109].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__616\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[10].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__517\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[110].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__617\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[111].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__618\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[112].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__619\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[113].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__620\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[114].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__621\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[115].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__622\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[116].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__623\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[117].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__624\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[118].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__625\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[119].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__626\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[11].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__518\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[120].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__627\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[121].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__628\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[122].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__629\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[123].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__630\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[124].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__631\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[125].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__632\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[126].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__633\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[127].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__634\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[128].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__635\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[129].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__636\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[12].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__519\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[130].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__637\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[131].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__638\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[132].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__639\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[133].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__640\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[134].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__641\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[135].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__642\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[136].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__643\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[137].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__644\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[138].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__645\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[139].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__646\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[13].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__520\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[140].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__647\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[141].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__648\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[142].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__649\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[143].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__650\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[14].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__521\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[15].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__522\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[16].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__523\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[17].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__524\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[18].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__525\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[19].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__526\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[1].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__508\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[20].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__527\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[21].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__528\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[22].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__529\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[23].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__530\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[24].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__531\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[25].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__532\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[26].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__533\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[27].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__534\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[28].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__535\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[29].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__536\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[2].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__509\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[30].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__537\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[31].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__538\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[32].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__539\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[33].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__540\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[34].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__541\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[35].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__542\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[36].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__543\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[37].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__544\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[38].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__545\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[39].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__546\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[3].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__510\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[40].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__547\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[41].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__548\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[42].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__549\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[43].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__550\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[44].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__551\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[45].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__552\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[46].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__553\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[47].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__554\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[48].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__555\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[49].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__556\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[4].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__511\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[50].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__557\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[51].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__558\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[52].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__559\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[53].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__560\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[54].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__561\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[55].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__562\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[56].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__563\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[57].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__564\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[58].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__565\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[59].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__566\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[5].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__512\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[60].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__567\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[61].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__568\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[62].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__569\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[63].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__570\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[64].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__571\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[65].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__572\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[66].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__573\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[67].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__574\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[68].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__575\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[69].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__576\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[6].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__513\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[70].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__577\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[71].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__578\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[72].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__579\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[73].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__580\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[74].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__581\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[75].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__582\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[76].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__583\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[77].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__584\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[78].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__585\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[79].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__586\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[7].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__514\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[80].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__587\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[81].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__588\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[82].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__589\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[83].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__590\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[84].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__591\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[85].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__592\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[86].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__593\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[87].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__594\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[88].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__595\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[89].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__596\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[8].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__515\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[90].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__597\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[91].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__598\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[92].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__599\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[93].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__600\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[94].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__601\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[95].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__602\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[96].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__603\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[97].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__604\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[98].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__605\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[99].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__606\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[12].gen_index[9].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__516\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[12]\
    );
\gen_size[13].gen_index[0].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__651\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[100].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__751\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[101].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__752\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[102].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__753\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[103].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__754\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[104].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__755\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[105].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__756\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[106].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__757\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[107].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__758\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[108].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__759\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[109].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__760\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[10].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__661\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[110].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__761\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[111].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__762\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[112].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__763\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[113].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__764\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[114].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__765\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[115].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__766\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[116].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__767\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[117].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__768\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[118].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__769\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[119].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__770\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[11].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__662\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[120].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__771\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[121].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__772\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[122].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__773\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[123].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__774\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[124].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__775\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[125].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__776\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[126].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__777\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[127].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__778\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[128].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__779\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[129].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__780\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[12].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__663\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[130].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__781\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[131].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__782\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[132].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__783\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[133].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__784\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[134].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__785\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[135].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__786\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[136].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__787\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[137].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__788\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[138].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__789\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[139].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__790\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[13].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__664\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[140].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__791\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[141].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__792\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[142].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__793\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[143].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__794\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[144].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__795\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[145].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__796\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[146].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__797\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[147].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__798\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[148].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__799\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[149].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__800\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[14].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__665\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[150].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__801\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[151].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__802\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[152].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__803\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[153].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__804\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[154].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__805\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[155].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__806\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[156].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__807\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[157].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__808\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[158].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__809\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[159].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__810\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[15].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__666\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[160].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__811\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[161].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__812\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[162].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__813\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[163].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__814\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[164].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__815\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[165].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__816\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[166].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__817\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[167].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__818\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[168].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__819\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[16].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__667\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[17].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__668\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[18].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__669\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[19].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__670\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[1].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__652\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[20].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__671\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[21].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__672\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[22].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__673\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[23].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__674\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[24].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__675\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[25].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__676\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[26].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__677\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[27].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__678\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[28].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__679\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[29].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__680\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[2].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__653\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[30].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__681\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[31].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__682\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[32].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__683\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[33].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__684\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[34].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__685\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[35].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__686\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[36].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__687\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[37].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__688\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[38].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__689\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[39].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__690\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[3].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__654\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[40].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__691\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[41].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__692\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[42].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__693\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[43].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__694\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[44].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__695\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[45].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__696\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[46].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__697\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[47].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__698\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[48].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__699\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[49].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__700\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[4].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__655\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[50].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__701\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[51].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__702\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[52].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__703\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[53].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__704\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[54].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__705\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[55].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__706\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[56].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__707\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[57].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__708\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[58].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__709\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[59].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__710\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[5].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__656\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[60].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__711\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[61].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__712\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[62].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__713\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[63].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__714\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[64].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__715\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[65].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__716\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[66].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__717\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[67].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__718\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[68].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__719\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[69].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__720\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[6].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__657\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[70].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__721\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[71].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__722\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[72].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__723\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[73].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__724\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[74].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__725\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[75].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__726\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[76].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__727\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[77].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__728\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[78].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__729\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[79].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__730\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[7].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__658\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[80].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__731\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[81].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__732\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[82].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__733\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[83].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__734\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[84].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__735\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[85].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__736\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[86].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__737\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[87].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__738\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[88].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__739\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[89].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__740\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[8].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__659\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[90].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__741\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[91].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__742\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[92].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__743\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[93].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__744\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[94].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__745\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[95].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__746\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[96].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__747\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[97].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__748\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[98].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__749\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[99].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__750\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[13].gen_index[9].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__660\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[13]\
    );
\gen_size[14].gen_index[0].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__820\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[100].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__920\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[101].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__921\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[102].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__922\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[103].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__923\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[104].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__924\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[105].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__925\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[106].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__926\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[107].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__927\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[108].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__928\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[109].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__929\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[10].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__830\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[110].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__930\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[111].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__931\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[112].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__932\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[113].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__933\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[114].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__934\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[115].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__935\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[116].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__936\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[117].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__937\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[118].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__938\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[119].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__939\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[11].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__831\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[120].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__940\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[121].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__941\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[122].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__942\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[123].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__943\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[124].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__944\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[125].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__945\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[126].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__946\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[127].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__947\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[128].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__948\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[129].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__949\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[12].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__832\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[130].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__950\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[131].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__951\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[132].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__952\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[133].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__953\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[134].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__954\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[135].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__955\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[136].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__956\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[137].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__957\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[138].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__958\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[139].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__959\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[13].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__833\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[140].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__960\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[141].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__961\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[142].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__962\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[143].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__963\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[144].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__964\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[145].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__965\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[146].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__966\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[147].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__967\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[148].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__968\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[149].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__969\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[14].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__834\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[150].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__970\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[151].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__971\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[152].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__972\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[153].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__973\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[154].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__974\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[155].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__975\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[156].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__976\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[157].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__977\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[158].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__978\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[159].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__979\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[15].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__835\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[160].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__980\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[161].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__981\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[162].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__982\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[163].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__983\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[164].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__984\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[165].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__985\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[166].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__986\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[167].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__987\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[168].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__988\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[169].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__989\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[16].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__836\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[170].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__990\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[171].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__991\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[172].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__992\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[173].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__993\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[174].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__994\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[175].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__995\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[176].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__996\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[177].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__997\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[178].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__998\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[179].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__999\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[17].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__837\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[180].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1000\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[181].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1001\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[182].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1002\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[183].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1003\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[184].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1004\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[185].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1005\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[186].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1006\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[187].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1007\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[188].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1008\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[189].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1009\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[18].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__838\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[190].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1010\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[191].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1011\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[192].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1012\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[193].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1013\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[194].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1014\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[195].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1015\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[19].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__839\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[1].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__821\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[20].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__840\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[21].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__841\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[22].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__842\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[23].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__843\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[24].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__844\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[25].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__845\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[26].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__846\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[27].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__847\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[28].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__848\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[29].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__849\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[2].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__822\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[30].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__850\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[31].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__851\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[32].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__852\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[33].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__853\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[34].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__854\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[35].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__855\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[36].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__856\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[37].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__857\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[38].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__858\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[39].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__859\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[3].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__823\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[40].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__860\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[41].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__861\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[42].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__862\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[43].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__863\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[44].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__864\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[45].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__865\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[46].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__866\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[47].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__867\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[48].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__868\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[49].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__869\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[4].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__824\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[50].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__870\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[51].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__871\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[52].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__872\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[53].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__873\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[54].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__874\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[55].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__875\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[56].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__876\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[57].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__877\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[58].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__878\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[59].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__879\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[5].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__825\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[60].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__880\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[61].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__881\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[62].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__882\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[63].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__883\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[64].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__884\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[65].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__885\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[66].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__886\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[67].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__887\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[68].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__888\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[69].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__889\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[6].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__826\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[70].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__890\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[71].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__891\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[72].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__892\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[73].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__893\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[74].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__894\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[75].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__895\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[76].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__896\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[77].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__897\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[78].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__898\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[79].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__899\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[7].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__827\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[80].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__900\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[81].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__901\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[82].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__902\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[83].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__903\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[84].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__904\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[85].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__905\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[86].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__906\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[87].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__907\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[88].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__908\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[89].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__909\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[8].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__828\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[90].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__910\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[91].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__911\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[92].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__912\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[93].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__913\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[94].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__914\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[95].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__915\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[96].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__916\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[97].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__917\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[98].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__918\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[99].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__919\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[14].gen_index[9].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__829\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[14]\
    );
\gen_size[15].gen_index[0].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1016\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[100].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1116\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[101].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1117\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[102].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1118\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[103].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1119\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[104].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1120\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[105].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1121\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[106].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1122\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[107].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1123\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[108].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1124\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[109].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1125\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[10].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1026\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[110].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1126\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[111].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1127\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[112].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1128\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[113].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1129\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[114].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1130\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[115].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1131\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[116].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1132\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[117].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1133\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[118].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1134\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[119].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1135\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[11].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1027\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[120].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1136\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[121].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1137\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[122].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1138\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[123].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1139\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[124].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1140\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[125].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1141\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[126].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1142\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[127].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1143\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[128].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1144\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[129].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1145\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[12].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1028\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[130].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1146\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[131].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1147\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[132].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1148\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[133].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1149\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[134].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1150\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[135].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1151\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[136].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1152\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[137].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1153\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[138].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1154\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[139].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1155\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[13].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1029\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[140].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1156\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[141].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1157\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[142].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1158\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[143].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1159\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[144].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1160\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[145].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1161\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[146].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1162\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[147].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1163\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[148].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1164\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[149].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1165\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[14].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1030\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[150].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1166\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[151].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1167\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[152].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1168\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[153].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1169\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[154].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1170\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[155].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1171\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[156].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1172\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[157].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1173\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[158].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1174\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[159].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1175\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[15].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1031\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[160].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1176\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[161].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1177\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[162].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1178\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[163].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1179\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[164].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1180\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[165].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1181\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[166].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1182\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[167].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1183\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[168].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1184\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[169].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1185\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[16].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1032\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[170].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1186\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[171].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1187\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[172].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1188\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[173].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1189\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[174].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1190\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[175].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1191\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[176].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1192\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[177].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1193\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[178].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1194\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[179].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1195\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[17].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1033\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[180].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1196\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[181].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1197\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[182].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1198\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[183].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1199\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[184].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1200\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[185].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1201\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[186].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1202\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[187].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1203\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[188].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1204\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[189].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1205\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[18].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1034\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[190].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1206\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[191].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1207\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[192].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1208\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[193].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1209\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[194].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1210\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[195].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1211\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[196].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1212\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[197].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1213\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[198].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1214\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[199].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1215\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[19].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1035\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[1].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1017\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[200].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1216\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[201].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1217\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[202].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1218\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[203].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1219\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[204].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1220\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[205].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1221\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[206].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1222\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[207].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1223\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[208].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1224\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[209].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1225\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[20].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1036\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[210].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1226\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[211].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1227\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[212].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1228\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[213].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1229\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[214].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1230\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[215].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1231\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[216].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1232\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[217].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1233\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[218].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1234\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[219].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1235\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[21].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1037\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[220].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1236\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[221].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1237\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[222].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1238\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[223].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1239\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[224].pvsRO\: entity work.z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[22].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1038\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[23].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1039\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[24].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1040\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[25].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1041\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[26].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1042\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[27].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1043\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[28].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1044\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[29].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1045\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[2].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1018\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[30].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1046\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[31].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1047\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[32].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1048\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[33].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1049\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[34].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1050\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[35].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1051\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[36].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1052\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[37].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1053\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[38].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1054\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[39].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1055\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[3].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1019\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[40].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1056\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[41].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1057\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[42].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1058\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[43].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1059\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[44].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1060\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[45].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1061\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[46].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1062\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[47].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1063\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[48].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1064\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[49].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1065\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[4].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1020\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[50].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1066\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[51].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1067\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[52].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1068\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[53].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1069\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[54].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1070\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[55].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1071\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[56].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1072\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[57].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1073\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[58].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1074\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[59].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1075\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[5].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1021\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[60].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1076\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[61].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1077\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[62].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1078\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[63].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1079\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[64].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1080\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[65].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1081\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[66].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1082\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[67].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1083\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[68].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1084\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[69].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1085\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[6].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1022\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[70].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1086\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[71].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1087\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[72].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1088\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[73].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1089\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[74].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1090\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[75].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1091\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[76].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1092\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[77].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1093\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[78].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1094\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[79].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1095\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[7].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1023\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[80].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1096\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[81].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1097\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[82].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1098\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[83].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1099\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[84].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1100\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[85].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1101\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[86].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1102\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[87].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1103\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[88].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1104\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[89].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1105\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[8].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1024\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[90].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1106\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[91].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1107\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[92].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1108\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[93].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1109\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[94].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1110\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[95].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1111\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[96].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1112\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[97].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1113\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[98].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1114\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[99].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1115\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[15].gen_index[9].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1025\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[15]\
    );
\gen_size[1].gen_index[0].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__1\
     port map (
      enable => \^dummy\
    );
\gen_size[2].gen_index[0].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__2\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[2]\
    );
\gen_size[2].gen_index[1].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__3\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[2]\
    );
\gen_size[2].gen_index[2].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__4\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[2]\
    );
\gen_size[2].gen_index[3].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__5\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[2]\
    );
\gen_size[3].gen_index[0].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__6\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[3]\
    );
\gen_size[3].gen_index[1].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__7\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[3]\
    );
\gen_size[3].gen_index[2].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__8\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[3]\
    );
\gen_size[3].gen_index[3].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__9\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[3]\
    );
\gen_size[3].gen_index[4].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__10\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[3]\
    );
\gen_size[3].gen_index[5].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__11\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[3]\
    );
\gen_size[3].gen_index[6].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__12\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[3]\
    );
\gen_size[3].gen_index[7].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__13\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[3]\
    );
\gen_size[3].gen_index[8].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__14\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[3]\
    );
\gen_size[4].gen_index[0].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__15\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[4]\
    );
\gen_size[4].gen_index[10].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__25\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[4]\
    );
\gen_size[4].gen_index[11].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__26\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[4]\
    );
\gen_size[4].gen_index[12].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__27\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[4]\
    );
\gen_size[4].gen_index[13].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__28\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[4]\
    );
\gen_size[4].gen_index[14].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__29\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[4]\
    );
\gen_size[4].gen_index[15].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__30\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[4]\
    );
\gen_size[4].gen_index[1].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__16\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[4]\
    );
\gen_size[4].gen_index[2].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__17\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[4]\
    );
\gen_size[4].gen_index[3].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__18\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[4]\
    );
\gen_size[4].gen_index[4].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__19\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[4]\
    );
\gen_size[4].gen_index[5].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__20\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[4]\
    );
\gen_size[4].gen_index[6].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__21\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[4]\
    );
\gen_size[4].gen_index[7].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__22\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[4]\
    );
\gen_size[4].gen_index[8].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__23\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[4]\
    );
\gen_size[4].gen_index[9].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__24\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[4]\
    );
\gen_size[5].gen_index[0].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__31\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[5]\
    );
\gen_size[5].gen_index[10].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__41\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[5]\
    );
\gen_size[5].gen_index[11].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__42\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[5]\
    );
\gen_size[5].gen_index[12].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__43\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[5]\
    );
\gen_size[5].gen_index[13].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__44\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[5]\
    );
\gen_size[5].gen_index[14].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__45\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[5]\
    );
\gen_size[5].gen_index[15].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__46\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[5]\
    );
\gen_size[5].gen_index[16].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__47\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[5]\
    );
\gen_size[5].gen_index[17].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__48\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[5]\
    );
\gen_size[5].gen_index[18].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__49\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[5]\
    );
\gen_size[5].gen_index[19].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__50\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[5]\
    );
\gen_size[5].gen_index[1].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__32\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[5]\
    );
\gen_size[5].gen_index[20].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__51\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[5]\
    );
\gen_size[5].gen_index[21].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__52\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[5]\
    );
\gen_size[5].gen_index[22].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__53\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[5]\
    );
\gen_size[5].gen_index[23].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__54\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[5]\
    );
\gen_size[5].gen_index[24].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__55\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[5]\
    );
\gen_size[5].gen_index[2].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__33\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[5]\
    );
\gen_size[5].gen_index[3].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__34\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[5]\
    );
\gen_size[5].gen_index[4].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__35\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[5]\
    );
\gen_size[5].gen_index[5].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__36\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[5]\
    );
\gen_size[5].gen_index[6].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__37\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[5]\
    );
\gen_size[5].gen_index[7].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__38\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[5]\
    );
\gen_size[5].gen_index[8].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__39\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[5]\
    );
\gen_size[5].gen_index[9].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__40\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[5]\
    );
\gen_size[6].gen_index[0].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__56\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[6]\
    );
\gen_size[6].gen_index[10].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__66\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[6]\
    );
\gen_size[6].gen_index[11].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__67\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[6]\
    );
\gen_size[6].gen_index[12].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__68\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[6]\
    );
\gen_size[6].gen_index[13].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__69\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[6]\
    );
\gen_size[6].gen_index[14].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__70\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[6]\
    );
\gen_size[6].gen_index[15].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__71\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[6]\
    );
\gen_size[6].gen_index[16].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__72\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[6]\
    );
\gen_size[6].gen_index[17].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__73\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[6]\
    );
\gen_size[6].gen_index[18].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__74\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[6]\
    );
\gen_size[6].gen_index[19].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__75\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[6]\
    );
\gen_size[6].gen_index[1].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__57\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[6]\
    );
\gen_size[6].gen_index[20].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__76\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[6]\
    );
\gen_size[6].gen_index[21].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__77\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[6]\
    );
\gen_size[6].gen_index[22].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__78\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[6]\
    );
\gen_size[6].gen_index[23].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__79\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[6]\
    );
\gen_size[6].gen_index[24].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__80\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[6]\
    );
\gen_size[6].gen_index[25].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__81\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[6]\
    );
\gen_size[6].gen_index[26].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__82\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[6]\
    );
\gen_size[6].gen_index[27].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__83\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[6]\
    );
\gen_size[6].gen_index[28].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__84\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[6]\
    );
\gen_size[6].gen_index[29].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__85\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[6]\
    );
\gen_size[6].gen_index[2].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__58\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[6]\
    );
\gen_size[6].gen_index[30].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__86\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[6]\
    );
\gen_size[6].gen_index[31].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__87\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[6]\
    );
\gen_size[6].gen_index[32].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__88\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[6]\
    );
\gen_size[6].gen_index[33].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__89\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[6]\
    );
\gen_size[6].gen_index[34].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__90\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[6]\
    );
\gen_size[6].gen_index[35].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__91\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[6]\
    );
\gen_size[6].gen_index[3].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__59\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[6]\
    );
\gen_size[6].gen_index[4].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__60\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[6]\
    );
\gen_size[6].gen_index[5].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__61\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[6]\
    );
\gen_size[6].gen_index[6].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__62\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[6]\
    );
\gen_size[6].gen_index[7].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__63\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[6]\
    );
\gen_size[6].gen_index[8].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__64\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[6]\
    );
\gen_size[6].gen_index[9].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__65\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[6]\
    );
\gen_size[7].gen_index[0].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__92\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[7]\
    );
\gen_size[7].gen_index[10].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__102\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[7]\
    );
\gen_size[7].gen_index[11].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__103\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[7]\
    );
\gen_size[7].gen_index[12].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__104\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[7]\
    );
\gen_size[7].gen_index[13].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__105\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[7]\
    );
\gen_size[7].gen_index[14].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__106\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[7]\
    );
\gen_size[7].gen_index[15].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__107\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[7]\
    );
\gen_size[7].gen_index[16].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__108\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[7]\
    );
\gen_size[7].gen_index[17].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__109\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[7]\
    );
\gen_size[7].gen_index[18].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__110\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[7]\
    );
\gen_size[7].gen_index[19].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__111\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[7]\
    );
\gen_size[7].gen_index[1].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__93\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[7]\
    );
\gen_size[7].gen_index[20].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__112\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[7]\
    );
\gen_size[7].gen_index[21].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__113\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[7]\
    );
\gen_size[7].gen_index[22].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__114\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[7]\
    );
\gen_size[7].gen_index[23].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__115\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[7]\
    );
\gen_size[7].gen_index[24].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__116\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[7]\
    );
\gen_size[7].gen_index[25].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__117\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[7]\
    );
\gen_size[7].gen_index[26].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__118\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[7]\
    );
\gen_size[7].gen_index[27].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__119\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[7]\
    );
\gen_size[7].gen_index[28].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__120\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[7]\
    );
\gen_size[7].gen_index[29].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__121\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[7]\
    );
\gen_size[7].gen_index[2].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__94\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[7]\
    );
\gen_size[7].gen_index[30].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__122\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[7]\
    );
\gen_size[7].gen_index[31].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__123\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[7]\
    );
\gen_size[7].gen_index[32].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__124\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[7]\
    );
\gen_size[7].gen_index[33].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__125\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[7]\
    );
\gen_size[7].gen_index[34].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__126\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[7]\
    );
\gen_size[7].gen_index[35].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__127\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[7]\
    );
\gen_size[7].gen_index[36].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__128\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[7]\
    );
\gen_size[7].gen_index[37].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__129\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[7]\
    );
\gen_size[7].gen_index[38].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__130\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[7]\
    );
\gen_size[7].gen_index[39].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__131\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[7]\
    );
\gen_size[7].gen_index[3].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__95\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[7]\
    );
\gen_size[7].gen_index[40].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__132\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[7]\
    );
\gen_size[7].gen_index[41].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__133\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[7]\
    );
\gen_size[7].gen_index[42].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__134\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[7]\
    );
\gen_size[7].gen_index[43].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__135\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[7]\
    );
\gen_size[7].gen_index[44].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__136\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[7]\
    );
\gen_size[7].gen_index[45].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__137\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[7]\
    );
\gen_size[7].gen_index[46].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__138\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[7]\
    );
\gen_size[7].gen_index[47].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__139\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[7]\
    );
\gen_size[7].gen_index[48].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__140\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[7]\
    );
\gen_size[7].gen_index[4].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__96\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[7]\
    );
\gen_size[7].gen_index[5].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__97\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[7]\
    );
\gen_size[7].gen_index[6].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__98\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[7]\
    );
\gen_size[7].gen_index[7].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__99\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[7]\
    );
\gen_size[7].gen_index[8].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__100\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[7]\
    );
\gen_size[7].gen_index[9].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__101\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[7]\
    );
\gen_size[8].gen_index[0].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__141\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[8]\
    );
\gen_size[8].gen_index[10].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__151\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[8]\
    );
\gen_size[8].gen_index[11].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__152\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[8]\
    );
\gen_size[8].gen_index[12].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__153\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[8]\
    );
\gen_size[8].gen_index[13].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__154\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[8]\
    );
\gen_size[8].gen_index[14].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__155\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[8]\
    );
\gen_size[8].gen_index[15].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__156\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[8]\
    );
\gen_size[8].gen_index[16].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__157\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[8]\
    );
\gen_size[8].gen_index[17].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__158\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[8]\
    );
\gen_size[8].gen_index[18].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__159\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[8]\
    );
\gen_size[8].gen_index[19].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__160\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[8]\
    );
\gen_size[8].gen_index[1].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__142\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[8]\
    );
\gen_size[8].gen_index[20].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__161\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[8]\
    );
\gen_size[8].gen_index[21].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__162\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[8]\
    );
\gen_size[8].gen_index[22].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__163\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[8]\
    );
\gen_size[8].gen_index[23].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__164\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[8]\
    );
\gen_size[8].gen_index[24].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__165\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[8]\
    );
\gen_size[8].gen_index[25].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__166\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[8]\
    );
\gen_size[8].gen_index[26].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__167\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[8]\
    );
\gen_size[8].gen_index[27].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__168\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[8]\
    );
\gen_size[8].gen_index[28].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__169\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[8]\
    );
\gen_size[8].gen_index[29].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__170\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[8]\
    );
\gen_size[8].gen_index[2].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__143\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[8]\
    );
\gen_size[8].gen_index[30].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__171\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[8]\
    );
\gen_size[8].gen_index[31].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__172\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[8]\
    );
\gen_size[8].gen_index[32].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__173\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[8]\
    );
\gen_size[8].gen_index[33].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__174\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[8]\
    );
\gen_size[8].gen_index[34].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__175\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[8]\
    );
\gen_size[8].gen_index[35].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__176\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[8]\
    );
\gen_size[8].gen_index[36].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__177\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[8]\
    );
\gen_size[8].gen_index[37].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__178\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[8]\
    );
\gen_size[8].gen_index[38].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__179\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[8]\
    );
\gen_size[8].gen_index[39].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__180\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[8]\
    );
\gen_size[8].gen_index[3].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__144\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[8]\
    );
\gen_size[8].gen_index[40].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__181\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[8]\
    );
\gen_size[8].gen_index[41].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__182\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[8]\
    );
\gen_size[8].gen_index[42].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__183\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[8]\
    );
\gen_size[8].gen_index[43].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__184\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[8]\
    );
\gen_size[8].gen_index[44].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__185\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[8]\
    );
\gen_size[8].gen_index[45].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__186\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[8]\
    );
\gen_size[8].gen_index[46].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__187\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[8]\
    );
\gen_size[8].gen_index[47].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__188\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[8]\
    );
\gen_size[8].gen_index[48].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__189\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[8]\
    );
\gen_size[8].gen_index[49].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__190\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[8]\
    );
\gen_size[8].gen_index[4].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__145\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[8]\
    );
\gen_size[8].gen_index[50].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__191\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[8]\
    );
\gen_size[8].gen_index[51].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__192\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[8]\
    );
\gen_size[8].gen_index[52].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__193\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[8]\
    );
\gen_size[8].gen_index[53].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__194\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[8]\
    );
\gen_size[8].gen_index[54].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__195\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[8]\
    );
\gen_size[8].gen_index[55].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__196\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[8]\
    );
\gen_size[8].gen_index[56].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__197\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[8]\
    );
\gen_size[8].gen_index[57].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__198\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[8]\
    );
\gen_size[8].gen_index[58].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__199\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[8]\
    );
\gen_size[8].gen_index[59].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__200\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[8]\
    );
\gen_size[8].gen_index[5].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__146\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[8]\
    );
\gen_size[8].gen_index[60].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__201\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[8]\
    );
\gen_size[8].gen_index[61].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__202\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[8]\
    );
\gen_size[8].gen_index[62].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__203\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[8]\
    );
\gen_size[8].gen_index[63].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__204\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[8]\
    );
\gen_size[8].gen_index[6].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__147\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[8]\
    );
\gen_size[8].gen_index[7].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__148\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[8]\
    );
\gen_size[8].gen_index[8].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__149\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[8]\
    );
\gen_size[8].gen_index[9].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__150\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[8]\
    );
\gen_size[9].gen_index[0].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__205\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[9]\
    );
\gen_size[9].gen_index[10].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__215\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[9]\
    );
\gen_size[9].gen_index[11].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__216\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[9]\
    );
\gen_size[9].gen_index[12].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__217\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[9]\
    );
\gen_size[9].gen_index[13].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__218\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[9]\
    );
\gen_size[9].gen_index[14].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__219\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[9]\
    );
\gen_size[9].gen_index[15].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__220\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[9]\
    );
\gen_size[9].gen_index[16].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__221\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[9]\
    );
\gen_size[9].gen_index[17].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__222\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[9]\
    );
\gen_size[9].gen_index[18].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__223\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[9]\
    );
\gen_size[9].gen_index[19].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__224\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[9]\
    );
\gen_size[9].gen_index[1].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__206\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[9]\
    );
\gen_size[9].gen_index[20].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__225\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[9]\
    );
\gen_size[9].gen_index[21].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__226\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[9]\
    );
\gen_size[9].gen_index[22].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__227\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[9]\
    );
\gen_size[9].gen_index[23].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__228\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[9]\
    );
\gen_size[9].gen_index[24].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__229\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[9]\
    );
\gen_size[9].gen_index[25].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__230\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[9]\
    );
\gen_size[9].gen_index[26].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__231\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[9]\
    );
\gen_size[9].gen_index[27].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__232\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[9]\
    );
\gen_size[9].gen_index[28].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__233\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[9]\
    );
\gen_size[9].gen_index[29].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__234\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[9]\
    );
\gen_size[9].gen_index[2].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__207\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[9]\
    );
\gen_size[9].gen_index[30].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__235\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[9]\
    );
\gen_size[9].gen_index[31].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__236\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[9]\
    );
\gen_size[9].gen_index[32].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__237\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[9]\
    );
\gen_size[9].gen_index[33].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__238\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[9]\
    );
\gen_size[9].gen_index[34].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__239\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[9]\
    );
\gen_size[9].gen_index[35].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__240\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[9]\
    );
\gen_size[9].gen_index[36].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__241\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[9]\
    );
\gen_size[9].gen_index[37].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__242\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[9]\
    );
\gen_size[9].gen_index[38].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__243\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[9]\
    );
\gen_size[9].gen_index[39].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__244\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[9]\
    );
\gen_size[9].gen_index[3].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__208\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[9]\
    );
\gen_size[9].gen_index[40].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__245\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[9]\
    );
\gen_size[9].gen_index[41].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__246\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[9]\
    );
\gen_size[9].gen_index[42].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__247\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[9]\
    );
\gen_size[9].gen_index[43].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__248\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[9]\
    );
\gen_size[9].gen_index[44].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__249\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[9]\
    );
\gen_size[9].gen_index[45].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__250\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[9]\
    );
\gen_size[9].gen_index[46].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__251\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[9]\
    );
\gen_size[9].gen_index[47].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__252\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[9]\
    );
\gen_size[9].gen_index[48].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__253\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[9]\
    );
\gen_size[9].gen_index[49].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__254\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[9]\
    );
\gen_size[9].gen_index[4].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__209\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[9]\
    );
\gen_size[9].gen_index[50].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__255\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[9]\
    );
\gen_size[9].gen_index[51].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__256\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[9]\
    );
\gen_size[9].gen_index[52].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__257\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[9]\
    );
\gen_size[9].gen_index[53].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__258\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[9]\
    );
\gen_size[9].gen_index[54].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__259\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[9]\
    );
\gen_size[9].gen_index[55].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__260\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[9]\
    );
\gen_size[9].gen_index[56].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__261\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[9]\
    );
\gen_size[9].gen_index[57].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__262\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[9]\
    );
\gen_size[9].gen_index[58].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__263\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[9]\
    );
\gen_size[9].gen_index[59].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__264\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[9]\
    );
\gen_size[9].gen_index[5].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__210\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[9]\
    );
\gen_size[9].gen_index[60].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__265\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[9]\
    );
\gen_size[9].gen_index[61].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__266\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[9]\
    );
\gen_size[9].gen_index[62].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__267\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[9]\
    );
\gen_size[9].gen_index[63].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__268\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[9]\
    );
\gen_size[9].gen_index[64].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__269\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[9]\
    );
\gen_size[9].gen_index[65].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__270\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[9]\
    );
\gen_size[9].gen_index[66].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__271\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[9]\
    );
\gen_size[9].gen_index[67].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__272\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[9]\
    );
\gen_size[9].gen_index[68].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__273\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[9]\
    );
\gen_size[9].gen_index[69].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__274\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[9]\
    );
\gen_size[9].gen_index[6].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__211\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[9]\
    );
\gen_size[9].gen_index[70].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__275\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[9]\
    );
\gen_size[9].gen_index[71].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__276\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[9]\
    );
\gen_size[9].gen_index[72].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__277\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[9]\
    );
\gen_size[9].gen_index[73].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__278\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[9]\
    );
\gen_size[9].gen_index[74].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__279\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[9]\
    );
\gen_size[9].gen_index[75].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__280\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[9]\
    );
\gen_size[9].gen_index[76].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__281\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[9]\
    );
\gen_size[9].gen_index[77].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__282\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[9]\
    );
\gen_size[9].gen_index[78].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__283\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[9]\
    );
\gen_size[9].gen_index[79].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__284\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[9]\
    );
\gen_size[9].gen_index[7].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__212\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[9]\
    );
\gen_size[9].gen_index[80].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__285\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[9]\
    );
\gen_size[9].gen_index[8].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__213\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[9]\
    );
\gen_size[9].gen_index[9].pvsRO\: entity work.\z2_voltage_experiments_power_virus_wrap_0_0_power_virus_single_RO__214\
     port map (
      enable => \num_power_virus_enabled_latched_reg_n_0_[9]\
    );
\num_power_virus_enabled_latched_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => clk_200MHz,
      CE => '1',
      D => num_power_virus_enabled(10),
      Q => \num_power_virus_enabled_latched_reg_n_0_[10]\,
      R => '0'
    );
\num_power_virus_enabled_latched_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => clk_200MHz,
      CE => '1',
      D => num_power_virus_enabled(11),
      Q => \num_power_virus_enabled_latched_reg_n_0_[11]\,
      R => '0'
    );
\num_power_virus_enabled_latched_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => clk_200MHz,
      CE => '1',
      D => num_power_virus_enabled(12),
      Q => \num_power_virus_enabled_latched_reg_n_0_[12]\,
      R => '0'
    );
\num_power_virus_enabled_latched_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => clk_200MHz,
      CE => '1',
      D => num_power_virus_enabled(13),
      Q => \num_power_virus_enabled_latched_reg_n_0_[13]\,
      R => '0'
    );
\num_power_virus_enabled_latched_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => clk_200MHz,
      CE => '1',
      D => num_power_virus_enabled(14),
      Q => \num_power_virus_enabled_latched_reg_n_0_[14]\,
      R => '0'
    );
\num_power_virus_enabled_latched_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => clk_200MHz,
      CE => '1',
      D => num_power_virus_enabled(15),
      Q => \num_power_virus_enabled_latched_reg_n_0_[15]\,
      R => '0'
    );
\num_power_virus_enabled_latched_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => clk_200MHz,
      CE => '1',
      D => num_power_virus_enabled(1),
      Q => \^dummy\,
      R => '0'
    );
\num_power_virus_enabled_latched_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => clk_200MHz,
      CE => '1',
      D => num_power_virus_enabled(2),
      Q => \num_power_virus_enabled_latched_reg_n_0_[2]\,
      R => '0'
    );
\num_power_virus_enabled_latched_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => clk_200MHz,
      CE => '1',
      D => num_power_virus_enabled(3),
      Q => \num_power_virus_enabled_latched_reg_n_0_[3]\,
      R => '0'
    );
\num_power_virus_enabled_latched_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => clk_200MHz,
      CE => '1',
      D => num_power_virus_enabled(4),
      Q => \num_power_virus_enabled_latched_reg_n_0_[4]\,
      R => '0'
    );
\num_power_virus_enabled_latched_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => clk_200MHz,
      CE => '1',
      D => num_power_virus_enabled(5),
      Q => \num_power_virus_enabled_latched_reg_n_0_[5]\,
      R => '0'
    );
\num_power_virus_enabled_latched_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => clk_200MHz,
      CE => '1',
      D => num_power_virus_enabled(6),
      Q => \num_power_virus_enabled_latched_reg_n_0_[6]\,
      R => '0'
    );
\num_power_virus_enabled_latched_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => clk_200MHz,
      CE => '1',
      D => num_power_virus_enabled(7),
      Q => \num_power_virus_enabled_latched_reg_n_0_[7]\,
      R => '0'
    );
\num_power_virus_enabled_latched_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => clk_200MHz,
      CE => '1',
      D => num_power_virus_enabled(8),
      Q => \num_power_virus_enabled_latched_reg_n_0_[8]\,
      R => '0'
    );
\num_power_virus_enabled_latched_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => clk_200MHz,
      CE => '1',
      D => num_power_virus_enabled(9),
      Q => \num_power_virus_enabled_latched_reg_n_0_[9]\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity z2_voltage_experiments_power_virus_wrap_0_0_power_virus_wrap is
  port (
    clk_200MHz : in STD_LOGIC;
    num_power_virus_enabled : in STD_LOGIC_VECTOR ( 15 downto 0 );
    dummy : out STD_LOGIC
  );
  attribute LOG_NUM_PV_INSTANCES : integer;
  attribute LOG_NUM_PV_INSTANCES of z2_voltage_experiments_power_virus_wrap_0_0_power_virus_wrap : entity is 15;
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of z2_voltage_experiments_power_virus_wrap_0_0_power_virus_wrap : entity is "power_virus_wrap";
  attribute PV_TYPE : integer;
  attribute PV_TYPE of z2_voltage_experiments_power_virus_wrap_0_0_power_virus_wrap : entity is 0;
  attribute dont_touch : string;
  attribute dont_touch of z2_voltage_experiments_power_virus_wrap_0_0_power_virus_wrap : entity is "true";
end z2_voltage_experiments_power_virus_wrap_0_0_power_virus_wrap;

architecture STRUCTURE of z2_voltage_experiments_power_virus_wrap_0_0_power_virus_wrap is
  attribute DONT_TOUCH_boolean : boolean;
  attribute DONT_TOUCH_boolean of pv : label is std.standard.true;
  attribute LOG_NUM_PV_INSTANCES of pv : label is 15;
  attribute PV_TYPE of pv : label is 0;
begin
pv: entity work.z2_voltage_experiments_power_virus_wrap_0_0_power_virus
     port map (
      clk_200MHz => clk_200MHz,
      dummy => dummy,
      num_power_virus_enabled(15 downto 0) => num_power_virus_enabled(15 downto 0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity z2_voltage_experiments_power_virus_wrap_0_0 is
  port (
    clk_200MHz : in STD_LOGIC;
    num_power_virus_enabled : in STD_LOGIC_VECTOR ( 15 downto 0 );
    dummy : out STD_LOGIC
  );
  attribute NotValidForBitStream : boolean;
  attribute NotValidForBitStream of z2_voltage_experiments_power_virus_wrap_0_0 : entity is true;
  attribute CHECK_LICENSE_TYPE : string;
  attribute CHECK_LICENSE_TYPE of z2_voltage_experiments_power_virus_wrap_0_0 : entity is "z2_voltage_experiments_power_virus_wrap_0_0,power_virus_wrap,{}";
  attribute DowngradeIPIdentifiedWarnings : string;
  attribute DowngradeIPIdentifiedWarnings of z2_voltage_experiments_power_virus_wrap_0_0 : entity is "yes";
  attribute IP_DEFINITION_SOURCE : string;
  attribute IP_DEFINITION_SOURCE of z2_voltage_experiments_power_virus_wrap_0_0 : entity is "module_ref";
  attribute X_CORE_INFO : string;
  attribute X_CORE_INFO of z2_voltage_experiments_power_virus_wrap_0_0 : entity is "power_virus_wrap,Vivado 2020.1";
end z2_voltage_experiments_power_virus_wrap_0_0;

architecture STRUCTURE of z2_voltage_experiments_power_virus_wrap_0_0 is
  attribute DONT_TOUCH : boolean;
  attribute DONT_TOUCH of inst : label is std.standard.true;
  attribute LOG_NUM_PV_INSTANCES : integer;
  attribute LOG_NUM_PV_INSTANCES of inst : label is 15;
  attribute PV_TYPE : integer;
  attribute PV_TYPE of inst : label is 0;
begin
inst: entity work.z2_voltage_experiments_power_virus_wrap_0_0_power_virus_wrap
     port map (
      clk_200MHz => clk_200MHz,
      dummy => dummy,
      num_power_virus_enabled(15 downto 0) => num_power_virus_enabled(15 downto 0)
    );
end STRUCTURE;
